{"version":3,"sources":["lib/styles/utils.js","components/ImageSlide/SVG.js","components/ImageSlide/ImageGallery.js","components/ImageSlide/ImageSlider.js","components/common/Footer.js","components/common/Button.js","components/common/Header.js","modules/loading.js","lib/createRequestSaga.js","lib/api/client.js","lib/api/auth.js","modules/user.js","containers/common/HeaderContainer.js","components/articles/ArticleCard.js","components/popup/ArticleModal.js","components/common/Loading.js","components/articles/Articles.js","lib/api/articles.js","modules/articles.js","components/articles/Pagination.js","containers/articles/ArticlesContainer.js","pages/MainPage.js","components/auth/AuthTemplate.js","components/auth/AuthForm.js","modules/auth.js","containers/auth/LoginForm.js","pages/LoginPage.js","containers/auth/RegisterForm.js","pages/RegisterPage.js","App.js","serviceWorker.js","modules/index.js","index.js"],"names":["color","primary","grayDark","grayLight","responsive","iconMapper","left","points","right","maximize","d","minimize","play","pause","Fragment","x","y","width","height","SVG","props","strokeWidth","viewBox","icon","className","xmlns","fill","stroke","strokeLinecap","strokeLinejoin","defaultProps","screenChangeEvents","isEnterOrSpaceKey","event","key","parseInt","keyCode","which","ImageGallery","state","currentIndex","startIndex","thumbsTranslate","currentSlideOffset","galleryWidth","thumbnailsWrapperWidth","thumbnailsWrapperHeight","isFullscreen","isPlaying","loadedImages","imageGallery","React","createRef","thumbnailsWrapper","thumbnails","imageGallerySlideWrapper","handleKeyDown","bind","handleMouseDown","handleOnSwiped","handleScreenChange","handleSwiping","onThumbnailMouseLeave","handleImageError","pauseOrPlay","renderThumbInner","renderItem","slideLeft","slideRight","toggleFullScreen","togglePlay","unthrottledSlideToIndex","slideToIndex","throttle","slideDuration","trailing","lazyLoad","lazyLoaded","this","autoPlay","window","addEventListener","initResizeObserver","addScreenChangeEvent","prevProps","prevState","items","thumbnailPosition","showThumbnails","itemsSizeChanged","length","itemsChanged","isEqual","startIndexUpdated","thumbnailsPositionChanged","showThumbnailsChanged","removeResizeObserver","handleResize","slideThumbnailBar","setState","removeEventListener","removeScreenChangeEvent","playPauseIntervalId","clearInterval","transitionTimer","clearTimeout","isTransitioning","onSlide","setTimeout","index","onThumbnailClick","thumbnailMouseOverTimer","dir","scrollingUpDown","scrollingLeftRight","LEFT","RIGHT","onScreenChange","modalFullscreen","indexDifference","totalScroll","disableThumbnailScroll","thumbElement","current","isThumbnailVertical","scrollHeight","scrollWidth","infinite","alignment","previousIndex","indexChanged","firstSlideWasPrevSlide","secondSlideWasPrevSlide","firstSlideIsNextSlide","secondSlideIsNextSlide","swipingEnded","translateX","direction","gallerySlideWrapperHeight","slideStyle","useTranslate3D","isRTL","baseTranslateX","totalSlides","getTranslateXForTwoSlide","translate","Object","assign","WebkitTransform","MozTransform","msTransform","OTransform","transform","verticalTranslateValue","slideOnThumbnailOver","onClick","onTouchMove","onTouchEnd","onTouchStart","onMouseOver","onMouseLeave","showBullets","slides","bullets","forEach","item","getAlignmentClassName","originalClass","thumbnailClass","handleRenderItem","handleRenderThumbInner","showItem","getSlideStyle","slide","aria-label","original","tabIndex","style","onKeyUp","handleSlideKeyUp","onFocus","role","shouldPushSlideOnInfiniteMode","push","igThumbnailClass","clsx","active","type","aria-pressed","handleThumbnailMouseOver","handleThumbnailKeyUp","igBulletClass","bulletClass","bulletOnClick","itemIndex","call","Math","abs","slideIsTransitioning","ignoreIsTransitioning","isFirstOrLastSlide","setThumbsTranslate","scroll","getThumbsTranslate","canSlideNext","canSlidePrevious","absX","preventDefaultTouchmoveEvent","disableSwipe","stopPropagation","swipingTransitionDuration","setScrollDirection","cancelable","preventDefault","side","swipingTransition","transition","swipeThreshold","velocity","flickThreshold","swipeDirection","isFlick","handleOnSwipedTo","slideTo","sufficientSwipe","canSlideLeft","canSlideRight","classList","add","disableKeyDown","useBrowserFullscreen","remove","exitFullScreen","onErrorImageURL","target","src","indexOf","resizeObserver","unobserve","offsetWidth","offsetHeight","element","ResizeObserver","debounce","entries","observe","fullScreen","fullScreenElement","document","fullscreenElement","msFullscreenElement","mozFullScreenElement","webkitFullscreenElement","onBeforeSlide","slideCount","nextIndex","onSliding","slideNext","slidePrevious","onThumbnailMouseOver","eventName","gallery","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","setModalFullscreen","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","shouldCallOnPlay","onPlay","slideInterval","setInterval","max","shouldCallOnPause","onPause","onImageLoad","onImageError","itemSrc","fullscreen","imageSet","onLoad","handleImageLoaded","onError","map","source","srcSet","media","alt","originalAlt","title","detail","xlinkHref","sizes","originalTitle","description","handleThumbnailError","onThumbnailError","thumbnail","thumbnailAlt","thumbnailTitle","thumbnailLabel","additionalClass","indexSeparator","renderFullscreenButton","renderCustomControls","renderLeftNav","renderRightNav","showFullscreenButton","showIndex","showNav","showPlayButton","renderPlayPauseButton","thumbnailStyle","getThumbnailStyle","getSlideItems","slideWrapperClass","slideWrapper","ref","canSlide","delta","onSwiping","onSwiped","igClass","igContentClass","thumbnailWrapperClass","aria-live","getThumbnailBarHeight","Component","disabled","images","ImageSlider","FooterBlock","styled","div","NavBlock","nav","NavAnchor","Link","CopyRight","p","Footer","to","buttonStyle","css","fullWidth","StyledButton","button","StyledLink","Button","cyan","HeaderBlock","header","HeaderTitle","h1","NavBox","h3","HeaderButton","Header","user","onLogout","display","alignItems","fontWeight","marginRight","id","startLoading","createAction","requestType","finishLoading","loading","handleActions","action","payload","createRequestSaga","request","SUCCESS","FAILURE","put","response","data","meta","error","client","axios","create","logout","post","logoutSaga","userSaga","CHECK","check","tempSetUser","checkSaga","get","checkFailureSaga","localStorage","removeItem","e","console","log","authAPI","takeLatest","checkError","HeaderContainer","useSelector","dispatch","useDispatch","CardImage","img","CartTextBox","ArticleCard","article","onArticleOpen","summary_content","save_date","postDate","moment","format","dangerouslySetInnerHTML","__html","ArticleModalBlock","ArticleModalContent","ArticleModalHeader","ArticleModalLeft","ArticleModalRight","ArticleModal","modal","onCancle","visible","content","class","Loading","ArticlesBlock","ArticlesHeading","CardsBlock","SelectBlock","Select","DateBlock","registerLocale","ko","withRouter","articles","children","history","useState","selectedOption","category","setCategory","Date","date","setDate","setModal","selectedArticle","onCategoryChange","useCallback","pathname","search","value","onDateChange","selectedDate","articleId","filter","selected","onChange","locale","dateFormat","maxDate","placeholderText","options","label","placeholder","list","a","userid","page","queryString","qs","stringify","articleSaga","listArticle","listArticleSaga","articleAPI","lastPage","headers","PaginationBlock","PageNumber","buildLink","query","location","parse","ignoreQueryPrefix","useEffect","undefined","ArticlesContainer","MainPageBlock","MainPage","AuthTemplateBlock","Pictures","PictureTextBox","AuthTemplate","AuthFormBlock","FormBlock","form","FormGroup","LableBlock","InputBlock","input","ErrorMessage","textMap","login","register","AuthForm","onSubmit","text","htmlFor","name","password","passwordConfirm","authSaga","LOGIN","changeField","initializeForm","loginSaga","registerSaga","initialState","auth","authError","produce","draft","setError","setItem","JSON","LoginPage","status","includes","RegisterPage","App","component","path","exact","Boolean","hostname","match","rootSaga","all","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","getItem","loadUser","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.08a1a042.chunk.js","sourcesContent":["export const color = {\r\n  primary: [\r\n    '#c69963', // $color-primary\r\n    '#b28451', // $color-primary-dark\r\n  ],\r\n\r\n  // $color-gray-dark 1, 2, 3 (검은색 순)\r\n  grayDark: ['#333', '#777', '#999'],\r\n\r\n  // $color-gray-light 1, 2, 3, 4 (흰색 순)\r\n  grayLight: ['#f9f7f6', '#f0eeee', '#ccc', '#aaa'],\r\n};\r\n\r\nexport const font = {\r\n  primary: [\"'Open Sans', sans-serif\"],\r\n};\r\n\r\nexport const responsive = {\r\n  'bp-largest': '75em', // 1200px\r\n  'bp-large': '56.25em', // 900px\r\n  'bp-medium': '37.5em', // 600px\r\n};\r\n","import React from 'react';\r\nimport { number, oneOf, string } from 'prop-types';\r\n\r\nconst left = <polyline points=\"15 18 9 12 15 6\" />;\r\nconst right = <polyline points=\"9 18 15 12 9 6\" />;\r\nconst maximize = (\r\n  <path d=\"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3\" />\r\n);\r\nconst minimize = (\r\n  <path d=\"M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3\" />\r\n);\r\nconst play = <polygon points=\"5 3 19 12 5 21 5 3\" />;\r\nconst pause = (\r\n  <React.Fragment>\r\n    <rect x=\"6\" y=\"4\" width=\"4\" height=\"16\" />\r\n    <rect x=\"14\" y=\"4\" width=\"4\" height=\"16\" />\r\n  </React.Fragment>\r\n);\r\n\r\nconst iconMapper = {\r\n  left,\r\n  right,\r\n  maximize,\r\n  minimize,\r\n  play,\r\n  pause,\r\n};\r\n\r\nconst SVG = (props) => {\r\n  const { strokeWidth, viewBox, icon } = props;\r\n  return (\r\n    <svg\r\n      className=\"image-gallery-svg\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox={viewBox}\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      strokeWidth={strokeWidth}\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    >\r\n      {iconMapper[icon]}\r\n    </svg>\r\n  );\r\n};\r\n\r\nSVG.propTypes = {\r\n  strokeWidth: number,\r\n  viewBox: string,\r\n  icon: oneOf(['left', 'right', 'maximize', 'minimize', 'play', 'pause'])\r\n    .isRequired,\r\n};\r\n\r\nSVG.defaultProps = {\r\n  strokeWidth: 1,\r\n  viewBox: '0 0 24 24',\r\n};\r\n\r\nexport default SVG;\r\n","import clsx from 'clsx';\r\nimport React from 'react';\r\nimport { Swipeable, LEFT, RIGHT } from 'react-swipeable';\r\nimport throttle from 'lodash.throttle';\r\nimport debounce from 'lodash.debounce';\r\nimport isEqual from 'lodash.isequal';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport { arrayOf, bool, func, number, oneOf, shape, string } from 'prop-types';\r\nimport SVG from './SVG';\r\n\r\nconst screenChangeEvents = [\r\n  'fullscreenchange',\r\n  'MSFullscreenChange',\r\n  'mozfullscreenchange',\r\n  'webkitfullscreenchange',\r\n];\r\n\r\nconst imageSetType = arrayOf(\r\n  shape({\r\n    srcSet: string,\r\n    media: string,\r\n  }),\r\n);\r\n\r\nfunction isEnterOrSpaceKey(event) {\r\n  const key = parseInt(event.keyCode || event.which || 0, 10);\r\n  const ENTER_KEY_CODE = 66;\r\n  const SPACEBAR_KEY_CODE = 62;\r\n  return key === ENTER_KEY_CODE || key === SPACEBAR_KEY_CODE;\r\n}\r\n\r\nexport default class ImageGallery extends React.Component {\r\n  static propTypes = {\r\n    flickThreshold: number,\r\n    items: arrayOf(\r\n      shape({\r\n        bulletClass: string,\r\n        bulletOnClick: func,\r\n        description: string,\r\n        original: string.isRequired,\r\n        fullscreen: string,\r\n        originalAlt: string,\r\n        originalTitle: string,\r\n        thumbnail: string,\r\n        thumbnailAlt: string,\r\n        thumbnailLabel: string,\r\n        thumbnailTitle: string,\r\n        originalClass: string,\r\n        thumbnailClass: string,\r\n        renderItem: func,\r\n        renderThumbInner: func,\r\n        imageSet: imageSetType,\r\n        srcSet: string,\r\n        sizes: string,\r\n        title: string,\r\n        body: string,\r\n      }),\r\n    ).isRequired,\r\n    showNav: bool,\r\n    autoPlay: bool,\r\n    lazyLoad: bool,\r\n    infinite: bool,\r\n    showIndex: bool,\r\n    showBullets: bool,\r\n    showThumbnails: bool,\r\n    showPlayButton: bool,\r\n    showFullscreenButton: bool,\r\n    disableThumbnailScroll: bool,\r\n    disableKeyDown: bool,\r\n    disableSwipe: bool,\r\n    useBrowserFullscreen: bool,\r\n    preventDefaultTouchmoveEvent: bool,\r\n    onErrorImageURL: string,\r\n    indexSeparator: string,\r\n    thumbnailPosition: oneOf(['top', 'bottom', 'left', 'right']),\r\n    startIndex: number,\r\n    slideDuration: number,\r\n    slideInterval: number,\r\n    slideOnThumbnailOver: bool,\r\n    swipeThreshold: number,\r\n    swipingTransitionDuration: number,\r\n    onSlide: func,\r\n    onBeforeSlide: func,\r\n    onScreenChange: func,\r\n    onPause: func,\r\n    onPlay: func,\r\n    onClick: func,\r\n    onImageLoad: func,\r\n    onImageError: func,\r\n    onTouchMove: func,\r\n    onTouchEnd: func,\r\n    onTouchStart: func,\r\n    onMouseOver: func,\r\n    onMouseLeave: func,\r\n    onThumbnailError: func,\r\n    onThumbnailClick: func,\r\n    renderCustomControls: func,\r\n    renderLeftNav: func,\r\n    renderRightNav: func,\r\n    renderPlayPauseButton: func,\r\n    renderFullscreenButton: func,\r\n    renderItem: func,\r\n    renderThumbInner: func,\r\n    stopPropagation: bool,\r\n    additionalClass: string,\r\n    useTranslate3D: bool,\r\n    isRTL: bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    onErrorImageURL: '',\r\n    additionalClass: '',\r\n    showNav: true,\r\n    autoPlay: false,\r\n    lazyLoad: false,\r\n    infinite: true,\r\n    showIndex: false,\r\n    showBullets: false,\r\n    showThumbnails: true,\r\n    showPlayButton: true,\r\n    showFullscreenButton: true,\r\n    disableThumbnailScroll: false,\r\n    disableKeyDown: false,\r\n    disableSwipe: false,\r\n    useTranslate3D: true,\r\n    isRTL: false,\r\n    useBrowserFullscreen: true,\r\n    preventDefaultTouchmoveEvent: false,\r\n    flickThreshold: 0.4,\r\n    stopPropagation: false,\r\n    indexSeparator: ' / ',\r\n    thumbnailPosition: 'bottom',\r\n    startIndex: 0,\r\n    slideDuration: 450,\r\n    swipingTransitionDuration: 0,\r\n    onSlide: null,\r\n    onBeforeSlide: null,\r\n    onScreenChange: null,\r\n    onPause: null,\r\n    onPlay: null,\r\n    onClick: null,\r\n    onImageLoad: null,\r\n    onImageError: null,\r\n    onTouchMove: null,\r\n    onTouchEnd: null,\r\n    onTouchStart: null,\r\n    onMouseOver: null,\r\n    onMouseLeave: null,\r\n    onThumbnailError: null,\r\n    onThumbnailClick: null,\r\n    renderCustomControls: null,\r\n    renderThumbInner: null,\r\n    renderItem: null,\r\n    slideInterval: 3000,\r\n    slideOnThumbnailOver: false,\r\n    swipeThreshold: 30,\r\n    renderLeftNav: (onClick, disabled) => (\r\n      <button\r\n        type=\"button\"\r\n        className=\"image-gallery-icon image-gallery-left-nav\"\r\n        disabled={disabled}\r\n        onClick={onClick}\r\n        aria-label=\"Previous Slide\"\r\n      >\r\n        <SVG icon=\"left\" viewBox=\"6 0 12 24\" />\r\n      </button>\r\n    ),\r\n    renderRightNav: (onClick, disabled) => (\r\n      <button\r\n        type=\"button\"\r\n        className=\"image-gallery-icon image-gallery-right-nav\"\r\n        disabled={disabled}\r\n        onClick={onClick}\r\n        aria-label=\"Next Slide\"\r\n      >\r\n        <SVG icon=\"right\" viewBox=\"6 0 12 24\" />\r\n      </button>\r\n    ),\r\n    renderPlayPauseButton: (onClick, isPlaying) => (\r\n      <button\r\n        type=\"button\"\r\n        className=\"image-gallery-icon image-gallery-play-button\"\r\n        onClick={onClick}\r\n        aria-label=\"Play or Pause Slideshow\"\r\n      >\r\n        <SVG strokeWidth={2} icon={isPlaying ? 'pause' : 'play'} />\r\n      </button>\r\n    ),\r\n    renderFullscreenButton: (onClick, isFullscreen) => (\r\n      <button\r\n        type=\"button\"\r\n        className=\"image-gallery-icon image-gallery-fullscreen-button\"\r\n        onClick={onClick}\r\n        aria-label=\"Open Fullscreen\"\r\n      >\r\n        <SVG strokeWidth={2} icon={isFullscreen ? 'minimize' : 'maximize'} />\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentIndex: props.startIndex,\r\n      thumbsTranslate: 0,\r\n      currentSlideOffset: 0,\r\n      galleryWidth: 0,\r\n      thumbnailsWrapperWidth: 0,\r\n      thumbnailsWrapperHeight: 0,\r\n      isFullscreen: false,\r\n      isPlaying: false,\r\n    };\r\n    this.loadedImages = {};\r\n    this.imageGallery = React.createRef();\r\n    this.thumbnailsWrapper = React.createRef();\r\n    this.thumbnails = React.createRef();\r\n    this.imageGallerySlideWrapper = React.createRef();\r\n\r\n    // bindings\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.handleOnSwiped = this.handleOnSwiped.bind(this);\r\n    this.handleScreenChange = this.handleScreenChange.bind(this);\r\n    this.handleSwiping = this.handleSwiping.bind(this);\r\n    this.onThumbnailMouseLeave = this.onThumbnailMouseLeave.bind(this);\r\n    this.handleImageError = this.handleImageError.bind(this);\r\n    this.pauseOrPlay = this.pauseOrPlay.bind(this);\r\n    this.renderThumbInner = this.renderThumbInner.bind(this);\r\n    this.renderItem = this.renderItem.bind(this);\r\n    this.slideLeft = this.slideLeft.bind(this);\r\n    this.slideRight = this.slideRight.bind(this);\r\n    this.toggleFullScreen = this.toggleFullScreen.bind(this);\r\n    this.togglePlay = this.togglePlay.bind(this);\r\n\r\n    // Used to update the throttle if slideDuration changes\r\n    this.unthrottledSlideToIndex = this.slideToIndex;\r\n    this.slideToIndex = throttle(\r\n      this.unthrottledSlideToIndex,\r\n      props.slideDuration,\r\n      { trailing: false },\r\n    );\r\n\r\n    if (props.lazyLoad) {\r\n      this.lazyLoaded = [];\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { autoPlay } = this.props;\r\n    if (autoPlay) {\r\n      this.play();\r\n    }\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n    window.addEventListener('mousedown', this.handleMouseDown);\r\n    this.initResizeObserver(this.imageGallerySlideWrapper);\r\n    this.addScreenChangeEvent();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const {\r\n      items,\r\n      lazyLoad,\r\n      slideDuration,\r\n      startIndex,\r\n      thumbnailPosition,\r\n      showThumbnails,\r\n    } = this.props;\r\n    const { currentIndex } = this.state;\r\n    const itemsSizeChanged = prevProps.items.length !== items.length;\r\n    const itemsChanged = !isEqual(prevProps.items, items);\r\n    const startIndexUpdated = prevProps.startIndex !== startIndex;\r\n    const thumbnailsPositionChanged =\r\n      prevProps.thumbnailPosition !== thumbnailPosition;\r\n    const showThumbnailsChanged = prevProps.showThumbnails !== showThumbnails;\r\n\r\n    if (thumbnailsPositionChanged) {\r\n      // re-initialize resizeObserver because slides was unmounted and mounted again\r\n      this.removeResizeObserver();\r\n      this.initResizeObserver(this.imageGallerySlideWrapper);\r\n    }\r\n\r\n    if (itemsSizeChanged || showThumbnailsChanged) {\r\n      this.handleResize();\r\n    }\r\n    if (prevState.currentIndex !== currentIndex) {\r\n      this.slideThumbnailBar(prevState.currentIndex);\r\n    }\r\n    // if slideDuration changes, update slideToIndex throttle\r\n    if (prevProps.slideDuration !== slideDuration) {\r\n      this.slideToIndex = throttle(\r\n        this.unthrottledSlideToIndex,\r\n        slideDuration,\r\n        { trailing: false },\r\n      );\r\n    }\r\n    if (lazyLoad && (!prevProps.lazyLoad || itemsChanged)) {\r\n      this.lazyLoaded = [];\r\n    }\r\n\r\n    if (startIndexUpdated || itemsChanged) {\r\n      // TODO: this should be fix/removed if all it is doing\r\n      // is resetting the gallery currentIndext state\r\n      this.setState({ currentIndex: startIndex });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n    window.removeEventListener('mousedown', this.handleMouseDown);\r\n    this.removeScreenChangeEvent();\r\n    this.removeResizeObserver();\r\n    if (this.playPauseIntervalId) {\r\n      window.clearInterval(this.playPauseIntervalId);\r\n      this.playPauseIntervalId = null;\r\n    }\r\n    if (this.transitionTimer) {\r\n      window.clearTimeout(this.transitionTimer);\r\n    }\r\n  }\r\n\r\n  onSliding() {\r\n    const { currentIndex, isTransitioning } = this.state;\r\n    const { onSlide, slideDuration } = this.props;\r\n    this.transitionTimer = window.setTimeout(() => {\r\n      if (isTransitioning) {\r\n        this.setState({ isTransitioning: !isTransitioning });\r\n        if (onSlide) {\r\n          onSlide(currentIndex);\r\n        }\r\n      }\r\n    }, slideDuration + 50);\r\n  }\r\n\r\n  onThumbnailClick(event, index) {\r\n    const { onThumbnailClick } = this.props;\r\n    this.slideToIndex(index, event);\r\n    if (onThumbnailClick) {\r\n      onThumbnailClick(event, index);\r\n    }\r\n  }\r\n\r\n  onThumbnailMouseOver(event, index) {\r\n    if (this.thumbnailMouseOverTimer) {\r\n      window.clearTimeout(this.thumbnailMouseOverTimer);\r\n      this.thumbnailMouseOverTimer = null;\r\n    }\r\n    this.thumbnailMouseOverTimer = window.setTimeout(() => {\r\n      this.slideToIndex(index);\r\n      this.pause();\r\n    }, 300);\r\n  }\r\n\r\n  onThumbnailMouseLeave() {\r\n    if (this.thumbnailMouseOverTimer) {\r\n      const { autoPlay } = this.props;\r\n      window.clearTimeout(this.thumbnailMouseOverTimer);\r\n      this.thumbnailMouseOverTimer = null;\r\n      if (autoPlay) {\r\n        this.play();\r\n      }\r\n    }\r\n  }\r\n\r\n  setScrollDirection(dir) {\r\n    const { scrollingUpDown, scrollingLeftRight } = this.state;\r\n\r\n    if (!scrollingUpDown && !scrollingLeftRight) {\r\n      if (dir === LEFT || dir === RIGHT) {\r\n        this.setState({ scrollingLeftRight: true });\r\n      } else {\r\n        this.setState({ scrollingUpDown: true });\r\n      }\r\n    }\r\n  }\r\n\r\n  setThumbsTranslate(thumbsTranslate) {\r\n    this.setState({ thumbsTranslate });\r\n  }\r\n\r\n  setModalFullscreen(state) {\r\n    const { onScreenChange } = this.props;\r\n    this.setState({ modalFullscreen: state });\r\n    // manually call because browser does not support screenchange events\r\n    if (onScreenChange) {\r\n      onScreenChange(state);\r\n    }\r\n  }\r\n\r\n  getThumbsTranslate(indexDifference) {\r\n    const { disableThumbnailScroll, items } = this.props;\r\n    const { thumbnailsWrapperWidth, thumbnailsWrapperHeight } = this.state;\r\n    let totalScroll;\r\n    const thumbElement = this.thumbnails && this.thumbnails.current;\r\n\r\n    if (disableThumbnailScroll) return 0;\r\n\r\n    if (thumbElement) {\r\n      // total scroll required to see the last thumbnail\r\n      if (this.isThumbnailVertical()) {\r\n        if (thumbElement.scrollHeight <= thumbnailsWrapperHeight) {\r\n          return 0;\r\n        }\r\n        totalScroll = thumbElement.scrollHeight - thumbnailsWrapperHeight;\r\n      } else {\r\n        if (\r\n          thumbElement.scrollWidth <= thumbnailsWrapperWidth ||\r\n          thumbnailsWrapperWidth <= 0\r\n        ) {\r\n          return 0;\r\n        }\r\n        totalScroll = thumbElement.scrollWidth - thumbnailsWrapperWidth;\r\n      }\r\n      // scroll-x required per index change\r\n      const perIndexScroll = totalScroll / (items.length - 1);\r\n      return indexDifference * perIndexScroll;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  getAlignmentClassName(index) {\r\n    // Necessary for lazing loading\r\n    const { currentIndex } = this.state;\r\n    const { infinite, items } = this.props;\r\n    let alignment = '';\r\n    const leftClassName = 'left';\r\n    const centerClassName = 'center';\r\n    const rightClassName = 'right';\r\n\r\n    switch (index) {\r\n      case currentIndex - 1:\r\n        alignment = ` ${leftClassName}`;\r\n        break;\r\n      case currentIndex:\r\n        alignment = ` ${centerClassName}`;\r\n        break;\r\n      case currentIndex + 1:\r\n        alignment = ` ${rightClassName}`;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (items.length >= 3 && infinite) {\r\n      if (index === 0 && currentIndex === items.length - 1) {\r\n        // set first slide as right slide if were sliding right from last slide\r\n        alignment = ` ${rightClassName}`;\r\n      } else if (index === items.length - 1 && currentIndex === 0) {\r\n        // set last slide as left slide if were sliding left from first slide\r\n        alignment = ` ${leftClassName}`;\r\n      }\r\n    }\r\n\r\n    return alignment;\r\n  }\r\n\r\n  getTranslateXForTwoSlide(index) {\r\n    // For taking care of infinite swipe when there are only two slides\r\n    const { currentIndex, currentSlideOffset, previousIndex } = this.state;\r\n    const indexChanged = currentIndex !== previousIndex;\r\n    const firstSlideWasPrevSlide = index === 0 && previousIndex === 0;\r\n    const secondSlideWasPrevSlide = index === 1 && previousIndex === 1;\r\n    const firstSlideIsNextSlide = index === 0 && currentIndex === 1;\r\n    const secondSlideIsNextSlide = index === 1 && currentIndex === 0;\r\n    const swipingEnded = currentSlideOffset === 0;\r\n    const baseTranslateX = -100 * currentIndex;\r\n    let translateX = baseTranslateX + index * 100 + currentSlideOffset;\r\n\r\n    // keep track of user swiping direction\r\n    // important to understand how to translateX based on last direction\r\n    if (currentSlideOffset > 0) {\r\n      this.direction = 'left';\r\n    } else if (currentSlideOffset < 0) {\r\n      this.direction = 'right';\r\n    }\r\n\r\n    // when swiping between two slides make sure the next and prev slides\r\n    // are on both left and right\r\n    if (secondSlideIsNextSlide && currentSlideOffset > 0) {\r\n      // swiping right\r\n      translateX = -100 + currentSlideOffset;\r\n    }\r\n    if (firstSlideIsNextSlide && currentSlideOffset < 0) {\r\n      // swiping left\r\n      translateX = 100 + currentSlideOffset;\r\n    }\r\n\r\n    if (indexChanged) {\r\n      // when indexChanged move the slide to the correct side\r\n      if (firstSlideWasPrevSlide && swipingEnded && this.direction === 'left') {\r\n        translateX = 100;\r\n      } else if (\r\n        secondSlideWasPrevSlide &&\r\n        swipingEnded &&\r\n        this.direction === 'right'\r\n      ) {\r\n        translateX = -100;\r\n      }\r\n    } else {\r\n      // keep the slide on the correct side if the swipe was not successful\r\n      if (secondSlideIsNextSlide && swipingEnded && this.direction === 'left') {\r\n        translateX = -100;\r\n      }\r\n      if (firstSlideIsNextSlide && swipingEnded && this.direction === 'right') {\r\n        translateX = 100;\r\n      }\r\n    }\r\n\r\n    return translateX;\r\n  }\r\n\r\n  getThumbnailBarHeight() {\r\n    if (this.isThumbnailVertical()) {\r\n      const { gallerySlideWrapperHeight } = this.state;\r\n      return { height: gallerySlideWrapperHeight };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  getSlideStyle(index) {\r\n    const { currentIndex, currentSlideOffset, slideStyle } = this.state;\r\n    const { infinite, items, useTranslate3D, isRTL } = this.props;\r\n    const baseTranslateX = -100 * currentIndex;\r\n    const totalSlides = items.length - 1;\r\n\r\n    // calculates where the other slides belong based on currentIndex\r\n    // if it is RTL the base line should be reversed\r\n    let translateX =\r\n      (baseTranslateX + index * 100) * (isRTL ? -1 : 1) + currentSlideOffset;\r\n\r\n    if (infinite && items.length > 2) {\r\n      if (currentIndex === 0 && index === totalSlides) {\r\n        // make the last slide the slide before the first\r\n        // if it is RTL the base line should be reversed\r\n        translateX = -100 * (isRTL ? -1 : 1) + currentSlideOffset;\r\n      } else if (currentIndex === totalSlides && index === 0) {\r\n        // make the first slide the slide after the last\r\n        // if it is RTL the base line should be reversed\r\n        translateX = 100 * (isRTL ? -1 : 1) + currentSlideOffset;\r\n      }\r\n    }\r\n\r\n    // Special case when there are only 2 items with infinite on\r\n    if (infinite && items.length === 2) {\r\n      translateX = this.getTranslateXForTwoSlide(index);\r\n    }\r\n\r\n    let translate = `translate(${translateX}%, 0)`;\r\n\r\n    if (useTranslate3D) {\r\n      translate = `translate3d(${translateX}%, 0, 0)`;\r\n    }\r\n\r\n    return Object.assign(\r\n      {},\r\n      {\r\n        WebkitTransform: translate,\r\n        MozTransform: translate,\r\n        msTransform: translate,\r\n        OTransform: translate,\r\n        transform: translate,\r\n      },\r\n      slideStyle,\r\n    );\r\n  }\r\n\r\n  getCurrentIndex() {\r\n    const { currentIndex } = this.state;\r\n    return currentIndex;\r\n  }\r\n\r\n  getThumbnailStyle() {\r\n    let translate;\r\n    const { useTranslate3D, isRTL } = this.props;\r\n    const { thumbsTranslate } = this.state;\r\n    const verticalTranslateValue = isRTL\r\n      ? thumbsTranslate * -1\r\n      : thumbsTranslate;\r\n\r\n    if (this.isThumbnailVertical()) {\r\n      translate = `translate(0, ${thumbsTranslate}px)`;\r\n      if (useTranslate3D) {\r\n        translate = `translate3d(0, ${thumbsTranslate}px, 0)`;\r\n      }\r\n    } else {\r\n      translate = `translate(${verticalTranslateValue}px, 0)`;\r\n      if (useTranslate3D) {\r\n        translate = `translate3d(${verticalTranslateValue}px, 0, 0)`;\r\n      }\r\n    }\r\n    return {\r\n      WebkitTransform: translate,\r\n      MozTransform: translate,\r\n      msTransform: translate,\r\n      OTransform: translate,\r\n      transform: translate,\r\n    };\r\n  }\r\n\r\n  getSlideItems() {\r\n    const { currentIndex } = this.state;\r\n    const {\r\n      infinite,\r\n      items,\r\n      slideOnThumbnailOver,\r\n      onClick,\r\n      lazyLoad,\r\n      onTouchMove,\r\n      onTouchEnd,\r\n      onTouchStart,\r\n      onMouseOver,\r\n      onMouseLeave,\r\n      renderItem,\r\n      renderThumbInner,\r\n      showThumbnails,\r\n      showBullets,\r\n    } = this.props;\r\n\r\n    const slides = [];\r\n    const thumbnails = [];\r\n    const bullets = [];\r\n\r\n    items.forEach((item, index) => {\r\n      const alignment = this.getAlignmentClassName(index);\r\n      const originalClass = item.originalClass ? ` ${item.originalClass}` : '';\r\n      const thumbnailClass = item.thumbnailClass\r\n        ? ` ${item.thumbnailClass}`\r\n        : '';\r\n      const handleRenderItem = item.renderItem || renderItem || this.renderItem;\r\n      const handleRenderThumbInner =\r\n        item.renderThumbInner || renderThumbInner || this.renderThumbInner;\r\n\r\n      const showItem = !lazyLoad || alignment || this.lazyLoaded[index];\r\n      if (showItem && lazyLoad && !this.lazyLoaded[index]) {\r\n        this.lazyLoaded[index] = true;\r\n      }\r\n\r\n      const slideStyle = this.getSlideStyle(index);\r\n\r\n      const slide = (\r\n        <div\r\n          aria-label={`Go to Slide ${index + 1}`}\r\n          key={`slide-${item.original}-${index}`}\r\n          tabIndex=\"-1\"\r\n          className={`image-gallery-slide ${alignment} ${originalClass}`}\r\n          style={slideStyle}\r\n          onClick={onClick}\r\n          onKeyUp={this.handleSlideKeyUp}\r\n          onTouchMove={onTouchMove}\r\n          onTouchEnd={onTouchEnd}\r\n          onTouchStart={onTouchStart}\r\n          onMouseOver={onMouseOver}\r\n          onFocus={onMouseOver}\r\n          onMouseLeave={onMouseLeave}\r\n          role=\"button\"\r\n        >\r\n          {showItem ? (\r\n            handleRenderItem(item)\r\n          ) : (\r\n            <div style={{ height: '100%' }} />\r\n          )}\r\n        </div>\r\n      );\r\n\r\n      if (infinite) {\r\n        // don't add some slides while transitioning to avoid background transitions\r\n        if (this.shouldPushSlideOnInfiniteMode(index)) {\r\n          slides.push(slide);\r\n        }\r\n      } else {\r\n        slides.push(slide);\r\n      }\r\n\r\n      if (showThumbnails) {\r\n        const igThumbnailClass = clsx(\r\n          'image-gallery-thumbnail',\r\n          thumbnailClass,\r\n          { active: currentIndex === index },\r\n        );\r\n        thumbnails.push(\r\n          <button\r\n            key={`thumbnail-${item.original}-${index}`}\r\n            type=\"button\"\r\n            tabIndex=\"0\"\r\n            aria-pressed={currentIndex === index ? 'true' : 'false'}\r\n            aria-label={`Go to Slide ${index + 1}`}\r\n            className={igThumbnailClass}\r\n            onMouseLeave={\r\n              slideOnThumbnailOver ? this.onThumbnailMouseLeave : null\r\n            }\r\n            onMouseOver={(event) => this.handleThumbnailMouseOver(event, index)}\r\n            onFocus={(event) => this.handleThumbnailMouseOver(event, index)}\r\n            onKeyUp={(event) => this.handleThumbnailKeyUp(event, index)}\r\n            onClick={(event) => this.onThumbnailClick(event, index)}\r\n          >\r\n            {handleRenderThumbInner(item)}\r\n          </button>,\r\n        );\r\n      }\r\n\r\n      if (showBullets) {\r\n        // generate bullet elements and store them in array\r\n        const bulletOnClick = (event) => {\r\n          if (item.bulletOnClick) {\r\n            item.bulletOnClick({ item, itemIndex: index, currentIndex });\r\n          }\r\n          return this.slideToIndex.call(this, index, event);\r\n        };\r\n        const igBulletClass = clsx('image-gallery-bullet', item.bulletClass, {\r\n          active: currentIndex === index,\r\n        });\r\n        bullets.push(\r\n          <button\r\n            type=\"button\"\r\n            key={`bullet-${item.original}-${index}`}\r\n            className={igBulletClass}\r\n            onClick={bulletOnClick}\r\n            aria-pressed={currentIndex === index ? 'true' : 'false'}\r\n            aria-label={`Go to Slide ${index + 1}`}\r\n          />,\r\n        );\r\n      }\r\n    });\r\n\r\n    return {\r\n      slides,\r\n      thumbnails,\r\n      bullets,\r\n    };\r\n  }\r\n\r\n  ignoreIsTransitioning() {\r\n    /*\r\n      Ignore isTransitioning because were not going to sibling slides\r\n      e.g. center to left or center to right\r\n    */\r\n    const { items } = this.props;\r\n    const { previousIndex, currentIndex } = this.state;\r\n    const totalSlides = items.length - 1;\r\n    // we want to show the in between slides transition\r\n    const slidingMoreThanOneSlideLeftOrRight =\r\n      Math.abs(previousIndex - currentIndex) > 1;\r\n    const notGoingFromFirstToLast = !(\r\n      previousIndex === 0 && currentIndex === totalSlides\r\n    );\r\n    const notGoingFromLastToFirst = !(\r\n      previousIndex === totalSlides && currentIndex === 0\r\n    );\r\n\r\n    return (\r\n      slidingMoreThanOneSlideLeftOrRight &&\r\n      notGoingFromFirstToLast &&\r\n      notGoingFromLastToFirst\r\n    );\r\n  }\r\n\r\n  isFirstOrLastSlide(index) {\r\n    const { items } = this.props;\r\n    const totalSlides = items.length - 1;\r\n    const isLastSlide = index === totalSlides;\r\n    const isFirstSlide = index === 0;\r\n    return isLastSlide || isFirstSlide;\r\n  }\r\n\r\n  slideIsTransitioning(index) {\r\n    /*\r\n    returns true if the gallery is transitioning and the index is not the\r\n    previous or currentIndex\r\n    */\r\n    const { isTransitioning, previousIndex, currentIndex } = this.state;\r\n    const indexIsNotPreviousOrNextSlide = !(\r\n      index === previousIndex || index === currentIndex\r\n    );\r\n    return isTransitioning && indexIsNotPreviousOrNextSlide;\r\n  }\r\n\r\n  shouldPushSlideOnInfiniteMode(index) {\r\n    /*\r\n      Push (show) slide if slide is the current slide and the next slide\r\n      OR\r\n      The slide is going more than one slide left or right, but not going from\r\n      first to last and not going from last to first\r\n      Edge case:\r\n      If you go to the first or last slide, when they're\r\n      not left, or right of each other they will try to catch up in the background\r\n      so unless were going from first to last or vice versa we don't want the first\r\n      or last slide to show up during the transition\r\n    */\r\n    return (\r\n      !this.slideIsTransitioning(index) ||\r\n      (this.ignoreIsTransitioning() && !this.isFirstOrLastSlide(index))\r\n    );\r\n  }\r\n\r\n  slideThumbnailBar(previousIndex) {\r\n    const { thumbsTranslate, currentIndex } = this.state;\r\n    if (currentIndex === 0) {\r\n      this.setThumbsTranslate(0);\r\n    } else {\r\n      const indexDifference = Math.abs(previousIndex - currentIndex);\r\n      const scroll = this.getThumbsTranslate(indexDifference);\r\n      if (scroll > 0) {\r\n        if (previousIndex < currentIndex) {\r\n          this.setThumbsTranslate(thumbsTranslate - scroll);\r\n        } else if (previousIndex > currentIndex) {\r\n          this.setThumbsTranslate(thumbsTranslate + scroll);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  canSlide() {\r\n    const { items } = this.props;\r\n    return items.length >= 2;\r\n  }\r\n\r\n  canSlideLeft() {\r\n    const { infinite, isRTL } = this.props;\r\n    return infinite || (isRTL ? this.canSlideNext() : this.canSlidePrevious());\r\n  }\r\n\r\n  canSlideRight() {\r\n    const { infinite, isRTL } = this.props;\r\n    return infinite || (isRTL ? this.canSlidePrevious() : this.canSlideNext());\r\n  }\r\n\r\n  canSlidePrevious() {\r\n    const { currentIndex } = this.state;\r\n    return currentIndex > 0;\r\n  }\r\n\r\n  canSlideNext() {\r\n    const { currentIndex } = this.state;\r\n    const { items } = this.props;\r\n    return currentIndex < items.length - 1;\r\n  }\r\n\r\n  handleSwiping({ event, absX, dir }) {\r\n    const {\r\n      preventDefaultTouchmoveEvent,\r\n      disableSwipe,\r\n      stopPropagation,\r\n    } = this.props;\r\n    const {\r\n      galleryWidth,\r\n      isTransitioning,\r\n      scrollingUpDown,\r\n      scrollingLeftRight,\r\n    } = this.state;\r\n\r\n    if (disableSwipe) return;\r\n    const { swipingTransitionDuration } = this.props;\r\n    this.setScrollDirection(dir);\r\n    if (stopPropagation) event.stopPropagation();\r\n    if (\r\n      (preventDefaultTouchmoveEvent || scrollingLeftRight) &&\r\n      event.cancelable\r\n    ) {\r\n      event.preventDefault();\r\n    }\r\n    if (!isTransitioning && !scrollingUpDown) {\r\n      const side = dir === RIGHT ? 1 : -1;\r\n\r\n      let currentSlideOffset = (absX / galleryWidth) * 100;\r\n      if (Math.abs(currentSlideOffset) >= 100) {\r\n        currentSlideOffset = 100;\r\n      }\r\n\r\n      const swipingTransition = {\r\n        transition: `transform ${swipingTransitionDuration}ms ease-out`,\r\n      };\r\n\r\n      this.setState({\r\n        currentSlideOffset: side * currentSlideOffset,\r\n        slideStyle: swipingTransition,\r\n      });\r\n    } else {\r\n      // don't move the slide\r\n      this.setState({ currentSlideOffset: 0 });\r\n    }\r\n  }\r\n\r\n  sufficientSwipe() {\r\n    const { currentSlideOffset } = this.state;\r\n    const { swipeThreshold } = this.props;\r\n    return Math.abs(currentSlideOffset) > swipeThreshold;\r\n  }\r\n\r\n  handleOnSwiped({ event, dir, velocity }) {\r\n    const { disableSwipe, stopPropagation, flickThreshold } = this.props;\r\n    const { scrollingUpDown, scrollingLeftRight } = this.state;\r\n\r\n    if (disableSwipe) return;\r\n\r\n    const { isRTL } = this.props;\r\n    if (stopPropagation) event.stopPropagation();\r\n    if (scrollingUpDown) {\r\n      // user stopped scrollingUpDown\r\n      this.setState({ scrollingUpDown: false });\r\n    }\r\n\r\n    if (scrollingLeftRight) {\r\n      // user stopped scrollingLeftRight\r\n      this.setState({ scrollingLeftRight: false });\r\n    }\r\n\r\n    if (!scrollingUpDown) {\r\n      // don't swipe if user is scrolling\r\n      // if it is RTL the direction is reversed\r\n      const swipeDirection = (dir === LEFT ? 1 : -1) * (isRTL ? -1 : 1);\r\n      const isFlick = velocity > flickThreshold;\r\n      this.handleOnSwipedTo(swipeDirection, isFlick);\r\n    }\r\n  }\r\n\r\n  handleOnSwipedTo(swipeDirection, isFlick) {\r\n    const { currentIndex, isTransitioning } = this.state;\r\n    let slideTo = currentIndex;\r\n\r\n    if ((this.sufficientSwipe() || isFlick) && !isTransitioning) {\r\n      // slideto the next/prev slide\r\n      slideTo += swipeDirection;\r\n    }\r\n\r\n    // If we can't swipe left or right, stay in the current index (noop)\r\n    if (\r\n      (swipeDirection === -1 && !this.canSlideLeft()) ||\r\n      (swipeDirection === 1 && !this.canSlideRight())\r\n    ) {\r\n      slideTo = currentIndex;\r\n    }\r\n\r\n    this.unthrottledSlideToIndex(slideTo);\r\n  }\r\n\r\n  handleMouseDown() {\r\n    // keep track of mouse vs keyboard usage for a11y\r\n    this.imageGallery.current.classList.add('image-gallery-using-mouse');\r\n  }\r\n\r\n  handleKeyDown(event) {\r\n    const { disableKeyDown, useBrowserFullscreen } = this.props;\r\n    const { isFullscreen } = this.state;\r\n    // keep track of mouse vs keyboard usage for a11y\r\n    this.imageGallery.current.classList.remove('image-gallery-using-mouse');\r\n\r\n    if (disableKeyDown) return;\r\n    const LEFT_ARROW = 37;\r\n    const RIGHT_ARROW = 39;\r\n    const ESC_KEY = 27;\r\n    const key = parseInt(event.keyCode || event.which || 0, 10);\r\n\r\n    switch (key) {\r\n      case LEFT_ARROW:\r\n        if (this.canSlideLeft() && !this.playPauseIntervalId) {\r\n          this.slideLeft(event);\r\n        }\r\n        break;\r\n      case RIGHT_ARROW:\r\n        if (this.canSlideRight() && !this.playPauseIntervalId) {\r\n          this.slideRight(event);\r\n        }\r\n        break;\r\n      case ESC_KEY:\r\n        if (isFullscreen && !useBrowserFullscreen) {\r\n          this.exitFullScreen();\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  handleImageError(event) {\r\n    const { onErrorImageURL } = this.props;\r\n    if (onErrorImageURL && event.target.src.indexOf(onErrorImageURL) === -1) {\r\n      /* eslint-disable no-param-reassign */\r\n      event.target.src = onErrorImageURL;\r\n      /* eslint-enable no-param-reassign */\r\n    }\r\n  }\r\n\r\n  removeResizeObserver() {\r\n    if (\r\n      this.resizeObserver &&\r\n      this.imageGallerySlideWrapper &&\r\n      this.imageGallerySlideWrapper.current\r\n    ) {\r\n      this.resizeObserver.unobserve(this.imageGallerySlideWrapper.current);\r\n    }\r\n  }\r\n\r\n  handleResize() {\r\n    const { currentIndex } = this.state;\r\n    if (this.imageGallery && this.imageGallery.current) {\r\n      this.setState({ galleryWidth: this.imageGallery.current.offsetWidth });\r\n    }\r\n\r\n    if (\r\n      this.imageGallerySlideWrapper &&\r\n      this.imageGallerySlideWrapper.current\r\n    ) {\r\n      this.setState({\r\n        gallerySlideWrapperHeight: this.imageGallerySlideWrapper.current\r\n          .offsetHeight,\r\n      });\r\n    }\r\n\r\n    if (this.thumbnailsWrapper && this.thumbnailsWrapper.current) {\r\n      if (this.isThumbnailVertical()) {\r\n        this.setState({\r\n          thumbnailsWrapperHeight: this.thumbnailsWrapper.current.offsetHeight,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          thumbnailsWrapperWidth: this.thumbnailsWrapper.current.offsetWidth,\r\n        });\r\n      }\r\n    }\r\n\r\n    // Adjust thumbnail container when thumbnail width or height is adjusted\r\n    this.setThumbsTranslate(-this.getThumbsTranslate(currentIndex));\r\n  }\r\n\r\n  initResizeObserver(element) {\r\n    this.resizeObserver = new ResizeObserver(\r\n      debounce((entries) => {\r\n        if (!entries) return;\r\n        entries.forEach(() => {\r\n          this.handleResize();\r\n        });\r\n      }, 300),\r\n    );\r\n    this.resizeObserver.observe(element.current);\r\n  }\r\n\r\n  toggleFullScreen() {\r\n    const { isFullscreen } = this.state;\r\n    if (isFullscreen) {\r\n      this.exitFullScreen();\r\n    } else {\r\n      this.fullScreen();\r\n    }\r\n  }\r\n\r\n  togglePlay() {\r\n    if (this.playPauseIntervalId) {\r\n      this.pause();\r\n    } else {\r\n      this.play();\r\n    }\r\n  }\r\n\r\n  handleScreenChange() {\r\n    /*\r\n      handles screen change events that the browser triggers e.g. esc key\r\n    */\r\n    const { onScreenChange, useBrowserFullscreen } = this.props;\r\n    const fullScreenElement =\r\n      document.fullscreenElement ||\r\n      document.msFullscreenElement ||\r\n      document.mozFullScreenElement ||\r\n      document.webkitFullscreenElement;\r\n\r\n    // check if screenchange element is the gallery\r\n    const isFullscreen = this.imageGallery.current === fullScreenElement;\r\n    if (onScreenChange) onScreenChange(isFullscreen);\r\n    if (useBrowserFullscreen) this.setState({ isFullscreen });\r\n  }\r\n\r\n  slideToIndex(index, event) {\r\n    const { currentIndex, isTransitioning } = this.state;\r\n    const { items, slideDuration, onBeforeSlide } = this.props;\r\n\r\n    if (!isTransitioning) {\r\n      if (event) {\r\n        if (this.playPauseIntervalId) {\r\n          // user triggered event while ImageGallery is playing, reset interval\r\n          this.pause(false);\r\n          this.play(false);\r\n        }\r\n      }\r\n\r\n      const slideCount = items.length - 1;\r\n      let nextIndex = index;\r\n      if (index < 0) {\r\n        nextIndex = slideCount;\r\n      } else if (index > slideCount) {\r\n        nextIndex = 0;\r\n      }\r\n\r\n      if (onBeforeSlide && nextIndex !== currentIndex) {\r\n        onBeforeSlide(nextIndex);\r\n      }\r\n\r\n      this.setState(\r\n        {\r\n          previousIndex: currentIndex,\r\n          currentIndex: nextIndex,\r\n          isTransitioning: nextIndex !== currentIndex,\r\n          currentSlideOffset: 0,\r\n          slideStyle: { transition: `all ${slideDuration}ms ease-out` },\r\n        },\r\n        this.onSliding,\r\n      );\r\n    }\r\n  }\r\n\r\n  slideLeft(event) {\r\n    const { isRTL } = this.props;\r\n    if (isRTL) {\r\n      this.slideNext(event);\r\n    } else {\r\n      this.slidePrevious(event);\r\n    }\r\n  }\r\n\r\n  slideRight(event) {\r\n    const { isRTL } = this.props;\r\n    if (isRTL) {\r\n      this.slidePrevious(event);\r\n    } else {\r\n      this.slideNext(event);\r\n    }\r\n  }\r\n\r\n  slidePrevious(event) {\r\n    const { currentIndex, currentSlideOffset, isTransitioning } = this.state;\r\n    const { items } = this.props;\r\n    const nextIndex = currentIndex - 1;\r\n\r\n    if (isTransitioning) return;\r\n\r\n    if (items.length === 2) {\r\n      /*\r\n        When there are only 2 slides fake a tiny swipe to get the slides\r\n        on the correct side for transitioning\r\n      */\r\n      this.setState(\r\n        {\r\n          currentSlideOffset: currentSlideOffset + 0.001, // this will reset once index changes\r\n          slideStyle: { transition: 'none' }, // move the slide over instantly\r\n        },\r\n        () => {\r\n          // add 25ms timeout to avoid delay in moving slides over\r\n          window.setTimeout(() => this.slideToIndex(nextIndex, event), 25);\r\n        },\r\n      );\r\n    } else {\r\n      this.slideToIndex(nextIndex, event);\r\n    }\r\n  }\r\n\r\n  slideNext(event) {\r\n    const { currentIndex, currentSlideOffset, isTransitioning } = this.state;\r\n    const { items } = this.props;\r\n    const nextIndex = currentIndex + 1;\r\n\r\n    if (isTransitioning) return;\r\n\r\n    if (items.length === 2) {\r\n      // same as above for 2 slides\r\n      this.setState(\r\n        {\r\n          currentSlideOffset: currentSlideOffset - 0.001,\r\n          slideStyle: { transition: 'none' },\r\n        },\r\n        () => {\r\n          window.setTimeout(() => this.slideToIndex(nextIndex, event), 25);\r\n        },\r\n      );\r\n    } else {\r\n      this.slideToIndex(nextIndex, event);\r\n    }\r\n  }\r\n\r\n  handleThumbnailMouseOver(event, index) {\r\n    const { slideOnThumbnailOver } = this.props;\r\n    if (slideOnThumbnailOver) this.onThumbnailMouseOver(event, index);\r\n  }\r\n\r\n  handleThumbnailKeyUp(event, index) {\r\n    // a11y support ^_^\r\n    if (isEnterOrSpaceKey(event)) this.onThumbnailClick(event, index);\r\n  }\r\n\r\n  handleSlideKeyUp(event) {\r\n    // a11y support ^_^\r\n    if (isEnterOrSpaceKey(event)) {\r\n      const { onClick } = this.props;\r\n      onClick(event);\r\n    }\r\n  }\r\n\r\n  isThumbnailVertical() {\r\n    const { thumbnailPosition } = this.props;\r\n    return thumbnailPosition === 'left' || thumbnailPosition === 'right';\r\n  }\r\n\r\n  addScreenChangeEvent() {\r\n    screenChangeEvents.forEach((eventName) => {\r\n      document.addEventListener(eventName, this.handleScreenChange);\r\n    });\r\n  }\r\n\r\n  removeScreenChangeEvent() {\r\n    screenChangeEvents.forEach((eventName) => {\r\n      document.removeEventListener(eventName, this.handleScreenChange);\r\n    });\r\n  }\r\n\r\n  fullScreen() {\r\n    const { useBrowserFullscreen } = this.props;\r\n    const gallery = this.imageGallery.current;\r\n    if (useBrowserFullscreen) {\r\n      if (gallery.requestFullscreen) {\r\n        gallery.requestFullscreen();\r\n      } else if (gallery.msRequestFullscreen) {\r\n        gallery.msRequestFullscreen();\r\n      } else if (gallery.mozRequestFullScreen) {\r\n        gallery.mozRequestFullScreen();\r\n      } else if (gallery.webkitRequestFullscreen) {\r\n        gallery.webkitRequestFullscreen();\r\n      } else {\r\n        // fallback to fullscreen modal for unsupported browsers\r\n        this.setModalFullscreen(true);\r\n      }\r\n    } else {\r\n      this.setModalFullscreen(true);\r\n    }\r\n    this.setState({ isFullscreen: true });\r\n  }\r\n\r\n  exitFullScreen() {\r\n    const { isFullscreen } = this.state;\r\n    const { useBrowserFullscreen } = this.props;\r\n    if (isFullscreen) {\r\n      if (useBrowserFullscreen) {\r\n        if (document.exitFullscreen) {\r\n          document.exitFullscreen();\r\n        } else if (document.webkitExitFullscreen) {\r\n          document.webkitExitFullscreen();\r\n        } else if (document.mozCancelFullScreen) {\r\n          document.mozCancelFullScreen();\r\n        } else if (document.msExitFullscreen) {\r\n          document.msExitFullscreen();\r\n        } else {\r\n          // fallback to fullscreen modal for unsupported browsers\r\n          this.setModalFullscreen(false);\r\n        }\r\n      } else {\r\n        this.setModalFullscreen(false);\r\n      }\r\n      this.setState({ isFullscreen: false });\r\n    }\r\n  }\r\n\r\n  pauseOrPlay() {\r\n    const { infinite } = this.props;\r\n    const { currentIndex } = this.state;\r\n    if (!infinite && !this.canSlideRight()) {\r\n      this.pause();\r\n    } else {\r\n      this.slideToIndex(currentIndex + 1);\r\n    }\r\n  }\r\n\r\n  play(shouldCallOnPlay = true) {\r\n    const { onPlay, slideInterval, slideDuration } = this.props;\r\n    const { currentIndex } = this.state;\r\n    if (!this.playPauseIntervalId) {\r\n      this.setState({ isPlaying: true });\r\n      this.playPauseIntervalId = window.setInterval(\r\n        this.pauseOrPlay,\r\n        Math.max(slideInterval, slideDuration),\r\n      );\r\n      if (onPlay && shouldCallOnPlay) {\r\n        onPlay(currentIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  pause(shouldCallOnPause = true) {\r\n    const { onPause } = this.props;\r\n    const { currentIndex } = this.state;\r\n    if (this.playPauseIntervalId) {\r\n      window.clearInterval(this.playPauseIntervalId);\r\n      this.playPauseIntervalId = null;\r\n      this.setState({ isPlaying: false });\r\n      if (onPause && shouldCallOnPause) {\r\n        onPause(currentIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  isImageLoaded(item) {\r\n    /*\r\n      Keep track of images loaded so that onImageLoad prop is not\r\n      called multiple times when re-render the images\r\n    */\r\n    const imageExists = this.loadedImages[item.original];\r\n    if (imageExists) {\r\n      return true;\r\n    }\r\n    // add image as loaded\r\n    this.loadedImages[item.original] = true;\r\n    return false;\r\n  }\r\n\r\n  handleImageLoaded(event, item) {\r\n    const { onImageLoad } = this.props;\r\n    const imageExists = this.loadedImages[item.original];\r\n    if (!imageExists && onImageLoad) {\r\n      this.loadedImages[item.original] = true; // prevent from call again\r\n      // image just loaded, call onImageLoad\r\n      onImageLoad(event);\r\n    }\r\n  }\r\n\r\n  renderItem(item) {\r\n    const { isFullscreen } = this.state;\r\n    const { onImageError } = this.props;\r\n    const handleImageError = onImageError || this.handleImageError;\r\n    const itemSrc = isFullscreen\r\n      ? item.fullscreen || item.original\r\n      : item.original;\r\n\r\n    return (\r\n      <div>\r\n        {item.imageSet ? (\r\n          <picture\r\n            onLoad={(event) => this.handleImageLoaded(event, item)}\r\n            onError={handleImageError}\r\n          >\r\n            {item.imageSet.map((source, index) => (\r\n              <source\r\n                key={`media-${source.srcSet}-${index}`}\r\n                media={source.media}\r\n                srcSet={source.srcSet}\r\n                type={source.type}\r\n              />\r\n            ))}\r\n            <img\r\n              className=\"image-gallery-image\"\r\n              alt={item.originalAlt}\r\n              src={itemSrc}\r\n            />\r\n          </picture>\r\n        ) : (\r\n          <>\r\n            <div className=\"image-gallery-textbox\">\r\n              <h1 className=\"image-gallery-title\">{item.title}</h1>\r\n              <h3 className=\"image-gallery-detail\">{item.detail}</h3>\r\n              <div>\r\n                <div className=\"image-gallery-icon--box\">\r\n                  <svg className=\"image-gallery-icon--svg\">\r\n                    <use xlinkHref=\"/images/sprite.svg#icon-heart\"></use>\r\n                  </svg>\r\n                  <span>31</span>\r\n                </div>\r\n                <div className=\"image-gallery-icon--box\">\r\n                  <svg className=\"image-gallery-icon--svg\">\r\n                    <use xlinkHref=\"/images/sprite.svg#icon-chat\"></use>\r\n                  </svg>\r\n                  <span>21</span>\r\n                </div>\r\n                <div className=\"image-gallery-icon--box\">\r\n                  <svg className=\"image-gallery-icon--svg\">\r\n                    <use xlinkHref=\"/images/sprite.svg#icon-list\"></use>\r\n                  </svg>\r\n                  <span>Read more</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <img\r\n              className=\"image-gallery-image\"\r\n              src={itemSrc}\r\n              alt={item.originalAlt}\r\n              srcSet={item.srcSet}\r\n              sizes={item.sizes}\r\n              title={item.originalTitle}\r\n              onLoad={(event) => this.handleImageLoaded(event, item)}\r\n              onError={handleImageError}\r\n            />\r\n          </>\r\n        )}\r\n\r\n        {item.description && (\r\n          <span className=\"image-gallery-description\">{item.description}</span>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderThumbInner(item) {\r\n    const { onThumbnailError } = this.props;\r\n    const handleThumbnailError = onThumbnailError || this.handleImageError;\r\n\r\n    return (\r\n      <div className=\"image-gallery-thumbnail-inner\">\r\n        <img\r\n          className=\"image-gallery-thumbnail-image\"\r\n          src={item.thumbnail}\r\n          alt={item.thumbnailAlt}\r\n          title={item.thumbnailTitle}\r\n          onError={handleThumbnailError}\r\n        />\r\n        {item.thumbnailLabel && (\r\n          <div className=\"image-gallery-thumbnail-label\">\r\n            {item.thumbnailLabel}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentIndex,\r\n      isFullscreen,\r\n      modalFullscreen,\r\n      isPlaying,\r\n    } = this.state;\r\n\r\n    const {\r\n      additionalClass,\r\n      indexSeparator, // deprecate soon, and allow custom render\r\n      isRTL,\r\n      items,\r\n      thumbnailPosition,\r\n      renderFullscreenButton,\r\n      renderCustomControls,\r\n      renderLeftNav,\r\n      renderRightNav,\r\n      showBullets,\r\n      showFullscreenButton,\r\n      showIndex,\r\n      showThumbnails,\r\n      showNav,\r\n      showPlayButton,\r\n      renderPlayPauseButton,\r\n    } = this.props;\r\n\r\n    const thumbnailStyle = this.getThumbnailStyle();\r\n    const { slides, thumbnails, bullets } = this.getSlideItems();\r\n    const slideWrapperClass = clsx(\r\n      'image-gallery-slide-wrapper',\r\n      thumbnailPosition,\r\n      { 'image-gallery-rtl': isRTL },\r\n    );\r\n\r\n    const slideWrapper = (\r\n      <div ref={this.imageGallerySlideWrapper} className={slideWrapperClass}>\r\n        {renderCustomControls && renderCustomControls()}\r\n        {this.canSlide() ? (\r\n          <React.Fragment>\r\n            {showNav && (\r\n              <React.Fragment>\r\n                {renderLeftNav(this.slideLeft, !this.canSlideLeft())}\r\n                {renderRightNav(this.slideRight, !this.canSlideRight())}\r\n              </React.Fragment>\r\n            )}\r\n            <Swipeable\r\n              className=\"image-gallery-swipe\"\r\n              delta={0}\r\n              onSwiping={this.handleSwiping}\r\n              onSwiped={this.handleOnSwiped}\r\n            >\r\n              <div className=\"image-gallery-slides\">{slides}</div>\r\n            </Swipeable>\r\n          </React.Fragment>\r\n        ) : (\r\n          <div className=\"image-gallery-slides\">{slides}</div>\r\n        )}\r\n        {showPlayButton && renderPlayPauseButton(this.togglePlay, isPlaying)}\r\n        {showBullets && (\r\n          <div className=\"image-gallery-bullets\">\r\n            <div\r\n              className=\"image-gallery-bullets-container\"\r\n              role=\"navigation\"\r\n              aria-label=\"Bullet Navigation\"\r\n            >\r\n              {bullets}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {showFullscreenButton &&\r\n          renderFullscreenButton(this.toggleFullScreen, isFullscreen)}\r\n        {showIndex && (\r\n          <div className=\"image-gallery-index\">\r\n            <span className=\"image-gallery-index-current\">\r\n              {currentIndex + 1}\r\n            </span>\r\n            <span className=\"image-gallery-index-separator\">\r\n              {indexSeparator}\r\n            </span>\r\n            <span className=\"image-gallery-index-total\">{items.length}</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n\r\n    const igClass = clsx('image-gallery', additionalClass, {\r\n      'fullscreen-modal': modalFullscreen,\r\n    });\r\n    const igContentClass = clsx('image-gallery-content', thumbnailPosition, {\r\n      fullscreen: isFullscreen,\r\n    });\r\n    const thumbnailWrapperClass = clsx(\r\n      'image-gallery-thumbnails-wrapper',\r\n      thumbnailPosition,\r\n      { 'thumbnails-wrapper-rtl': !this.isThumbnailVertical() && isRTL },\r\n    );\r\n    return (\r\n      <div ref={this.imageGallery} className={igClass} aria-live=\"polite\">\r\n        <div className={igContentClass}>\r\n          {(thumbnailPosition === 'bottom' || thumbnailPosition === 'right') &&\r\n            slideWrapper}\r\n          {showThumbnails && (\r\n            <div\r\n              className={thumbnailWrapperClass}\r\n              style={this.getThumbnailBarHeight()}\r\n            >\r\n              <div\r\n                className=\"image-gallery-thumbnails\"\r\n                ref={this.thumbnailsWrapper}\r\n              >\r\n                <div\r\n                  ref={this.thumbnails}\r\n                  className=\"image-gallery-thumbnails-container\"\r\n                  style={thumbnailStyle}\r\n                  aria-label=\"Thumbnail Navigation\"\r\n                >\r\n                  {thumbnails}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {(thumbnailPosition === 'top' || thumbnailPosition === 'left') &&\r\n            slideWrapper}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n// import styled from 'styled-components';\r\n// import { color, responsive } from '../../lib/styles/utils';\r\n// import { Link } from 'react-router-dom';\r\nimport ImageGallery from './ImageGallery';\r\nimport './ImageSlider.scss';\r\n\r\nconst images = [\r\n  {\r\n    original: '/images/gallery_img1.jpg',\r\n    thumbnail: '/images/gallery_img1.jpg',\r\n    title: 'Feel the beauty of Africa',\r\n    detail: `Get in touch with all the nature, life, meanings of africa only by\r\n    reading articles, watching fotos and living the life you can see on\r\n    \"TRAVELER\"`,\r\n  },\r\n  {\r\n    original: 'https://picsum.photos/id/1015/1000/600/',\r\n    thumbnail: 'https://picsum.photos/id/1015/250/150/',\r\n    title: 'Feel the beauty of Africa',\r\n    detail: `Get in touch with all the nature, life, meanings of africa only by\r\n    reading articles, watching fotos and living the life you can see on\r\n    \"TRAVELER\"`,\r\n  },\r\n  {\r\n    original: 'https://picsum.photos/id/1019/1000/600/',\r\n    thumbnail: 'https://picsum.photos/id/1019/250/150/',\r\n    title: 'Feel the beauty of Africa',\r\n    detail: `Get in touch with all the nature, life, meanings of africa only by\r\n    reading articles, watching fotos and living the life you can see on\r\n    \"TRAVELER\"`,\r\n  },\r\n];\r\n\r\nconst ImageSlider = () => {\r\n  return (\r\n    <ImageGallery\r\n      items={images}\r\n      showThumbnails={false}\r\n      showFullscreenButton={false}\r\n      showPlayButton={false}\r\n      showNav={true}\r\n      showBullets={true}\r\n      autoPlay={true}\r\n      slideInterval={30000}\r\n      slideDuration={1000}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ImageSlider;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { color } from '../../lib/styles/utils';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FooterBlock = styled.div`\r\n  background-color: ${color.grayDark[0]};\r\n  grid-column: full-start / full-end;\r\n  padding: 6rem;\r\n`;\r\n\r\nconst NavBlock = styled.nav`\r\n  list-style: none;\r\n\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(15rem, 1fr));\r\n  grid-gap: 2rem;\r\n  align-items: center;\r\n`;\r\n\r\nconst NavAnchor = styled(Link)`\r\n  &:link,\r\n  &:visited {\r\n    font-size: 1.4rem;\r\n    color: #fff;\r\n    text-decoration: none;\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n    padding: 1.5rem;\r\n    display: block;\r\n    transition: all 0.2s;\r\n  }\r\n\r\n  &:hover,\r\n  &:active {\r\n    background-color: rgba(#fff, 0.05);\r\n    transform: translateY(-3px);\r\n  }\r\n`;\r\n\r\nconst CopyRight = styled.p`\r\n  font-size: 1.4rem;\r\n  color: ${color.grayLight[1]};\r\n  margin-top: 6rem;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  text-align: center;\r\n  width: 65%;\r\n`;\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <FooterBlock>\r\n      <NavBlock>\r\n        <li>\r\n          <NavAnchor to=\"#\">Find your dream home</NavAnchor>\r\n        </li>\r\n        <li>\r\n          <NavAnchor to=\"#\">Request proposal</NavAnchor>\r\n        </li>\r\n        <li>\r\n          <NavAnchor to=\"#\">Download home planner</NavAnchor>\r\n        </li>\r\n        <li>\r\n          <NavAnchor to=\"#\">Contact us</NavAnchor>\r\n        </li>\r\n      </NavBlock>\r\n      <CopyRight>&copy; Copyright 2020 by Kim Chansu.</CopyRight>\r\n    </FooterBlock>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst buttonStyle = css`\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1.6rem;\r\n  font-weight: bold;\r\n  padding: 1.5rem 2rem;\r\n  color: white;\r\n  outline: none;\r\n  cursor: pointer;\r\n  background: #343a40;\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    background: #868e96;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.fullWidth &&\r\n    css`\r\n      padding-top: 0.75rem;\r\n      padding-bottom: 0.75rem;\r\n      width: 100%;\r\n      font-size: 1.125rem;\r\n    `}\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst Button = (props) => {\r\n  // props.to 값에 따라 StyledLink를 사용할지, StyledButton을 사용할지 결정\r\n  /*a 태그는 boolean값이 임의 props로 설정되는 것을 허용하지 않음*/\r\n  return props.to ? (\r\n    <StyledLink {...props} cyan={props.cyan ? 1 : 0} />\r\n  ) : (\r\n    <StyledButton {...props} />\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { color, responsive } from '../../lib/styles/utils';\r\nimport Button from './Button';\r\n\r\nconst HeaderBlock = styled.header`\r\n  background-color: ${color.grayLight[0]};\r\n  grid-column: full-start / full-end;\r\n  font-size: 1.4rem;\r\n  border-bottom: 1px solid ${color.grayLight[1]};\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  @media only screen and (max-width: ${responsive['bp-large']}) {\r\n    flex-wrap: wrap;\r\n  }\r\n`;\r\n\r\nconst HeaderTitle = styled.h1`\r\n  color: ${color.grayDark[0]};\r\n  margin-left: 2rem;\r\n`;\r\n\r\nconst NavBlock = styled.nav`\r\n  display: flex;\r\n  align-self: stretch;\r\n  align-items: center;\r\n\r\n  flex: 1 0 0;\r\n  justify-content: flex-end;\r\n\r\n  @media only screen and (max-width: ${responsive['bp-large']}) {\r\n    flex: 0 0 100%;\r\n    justify-content: space-between;\r\n    order: 10;\r\n  }\r\n`;\r\n\r\nconst NavBox = styled.div`\r\n  display: inline-block;\r\n\r\n  padding: 0 2rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst NavAnchor = styled.h3`\r\n  color: ${color.grayLight[3]};\r\n  text-transform: uppercase;\r\n\r\n  &:hover {\r\n    color: ${color.grayDark[0]};\r\n  }\r\n`;\r\n\r\nconst HeaderButton = styled(Button)`\r\n  margin-right: 1.5rem;\r\n  padding: 1rem 2rem;\r\n`;\r\n\r\nconst Header = ({ user, onLogout }) => {\r\n  return (\r\n    <HeaderBlock>\r\n      <HeaderTitle>Summary NewPaper (SN)</HeaderTitle>\r\n      <NavBlock>\r\n        <NavBox>\r\n          <NavAnchor>Blog</NavAnchor>\r\n        </NavBox>\r\n        <NavBox>\r\n          <NavAnchor>Articles</NavAnchor>\r\n        </NavBox>\r\n        <NavBox>\r\n          <NavAnchor>Gallery</NavAnchor>\r\n        </NavBox>\r\n        <NavBox>\r\n          <NavAnchor>Contact</NavAnchor>\r\n        </NavBox>\r\n      </NavBlock>\r\n      {user ? (\r\n        <div style={{ display: 'flex', alignItems: 'baseline' }}>\r\n          <h3 style={{ fontWeight: 600, marginRight: '1rem' }}>{user.id}님</h3>\r\n          <HeaderButton onClick={onLogout}>로그아웃</HeaderButton>\r\n        </div>\r\n      ) : (\r\n        <HeaderButton to=\"/login\">로그인</HeaderButton>\r\n      )}\r\n    </HeaderBlock>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { createAction, handleActions } from 'redux-actions';\r\n\r\nconst START_LOADING = 'loading/START_LOADING';\r\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\r\n\r\nexport const startLoading = createAction(\r\n  START_LOADING,\r\n  (requestType) => requestType,\r\n);\r\nexport const finishLoading = createAction(\r\n  FINISH_LOADING,\r\n  (requestType) => requestType,\r\n);\r\n\r\nconst initialState = {};\r\n\r\nconst loading = handleActions(\r\n  {\r\n    [START_LOADING]: (state, action) => ({\r\n      ...state,\r\n      [action.payload]: true,\r\n    }),\r\n    [FINISH_LOADING]: (state, action) => ({\r\n      ...state,\r\n      [action.payload]: false,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default loading;\r\n","import { put, call } from 'redux-saga/effects';\r\nimport { startLoading, finishLoading } from '../modules/loading';\r\n\r\nexport default function createRequestSaga(type, request) {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const FAILURE = `${type}_FAILURE`;\r\n\r\n  // 사가 함수를 반환해줌\r\n  return function* (action) {\r\n    yield put(startLoading(type)); // 디스패치 -- 로딩 시작\r\n    try {\r\n      const response = yield call(request, action.payload); // 비동기 API 함수 호출\r\n      yield put({\r\n        type: SUCCESS,\r\n        payload: response.data,\r\n        meta: response,\r\n      });\r\n    } catch (e) {\r\n      yield put({\r\n        type: FAILURE,\r\n        payload: e,\r\n        error: true,\r\n      });\r\n    }\r\n    yield put(finishLoading(type)); // 로딩 끝\r\n  };\r\n}\r\n","import axios from 'axios';\r\n\r\nconst client = axios.create();\r\n\r\nexport default client;\r\n","import client from './client';\r\n\r\n// 로그인\r\nexport const login = ({ userid, password }) =>\r\n  client.post('/api/auth/login', { userid, password });\r\n\r\n// 회원가입\r\nexport const register = ({ userid, password }) =>\r\n  client.post('/api/auth/register', { userid, password });\r\n\r\n// 로그인 상태확인\r\nexport const check = () => client.get('/api/auth/check');\r\n\r\n// 로그아웃\r\nexport const logout = () => client.post('/api/auth/logout');\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport createRequestSaga from '../lib/createRequestSaga';\r\nimport { takeLatest, call } from 'redux-saga/effects';\r\nimport * as authAPI from '../lib/api/auth';\r\n\r\nconst TEMP_SET_USER = 'user/TEMP_SET_USER'; // 새로고침 이후 임시 로그인 처리\r\nconst CHECK = 'user/CHECK'; // 로그인 상태확인\r\nconst CHECK_SUCCESS = 'user/CHECK_SUCCESS';\r\nconst CHECK_FAILURE = 'user/CHECK_FAILURE';\r\nconst LOGOUT = 'user/LOGOUT'; // 로그아웃\r\n\r\nexport const check = createAction(CHECK);\r\nexport const tempSetUser = createAction(TEMP_SET_USER, (user) => user);\r\nexport const logout = createAction(LOGOUT);\r\n\r\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\r\n\r\n// 토큰이 만료되거나 없으면 -> localStorage에 저장된 값도 제거\r\nfunction checkFailureSaga() {\r\n  try {\r\n    localStorage.removeItem('user'); // localStorage에 user 제거\r\n  } catch (e) {\r\n    console.log('localStorage is not working');\r\n  }\r\n}\r\n\r\nfunction* logoutSaga() {\r\n  try {\r\n    yield call(authAPI.logout);\r\n    localStorage.removeItem('user');\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport function* userSaga() {\r\n  yield takeLatest(CHECK, checkSaga);\r\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\r\n  yield takeLatest(LOGOUT, logoutSaga);\r\n}\r\n\r\nconst initialState = {\r\n  user: null,\r\n  checkError: null,\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [TEMP_SET_USER]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n    }),\r\n    [CHECK_SUCCESS]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n      checkError: null,\r\n    }),\r\n    [CHECK_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      user: null,\r\n      checkError: error,\r\n    }),\r\n    [LOGOUT]: (state) => ({\r\n      ...state,\r\n      user: null,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Header from '../../components/common/Header';\r\nimport { logout } from '../../modules/user';\r\n\r\nconst HeaderContainer = () => {\r\n  const { user } = useSelector(({ user }) => ({ user: user.user }));\r\n  const dispatch = useDispatch();\r\n  const onLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return <Header user={user} onLogout={onLogout} />;\r\n};\r\n\r\nexport default HeaderContainer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\n\r\nconst CardImage = styled.img`\r\n  width: 100%;\r\n  max-height: 300px;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst CartTextBox = styled.div`\r\n  background-color: white;\r\n  padding: 2rem;\r\n\r\n  .content-post {\r\n    font-size: 1.1rem;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  .content-title {\r\n    font-size: 2rem;\r\n    margin-bottom: 1.25rem;\r\n  }\r\n\r\n  .content-detail {\r\n    font-size: 1.25rem;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n\r\n  .content__link {\r\n    font-size: 1.25rem;\r\n    text-decoration: none;\r\n    padding-right: 2rem;\r\n\r\n    display: inline-flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .content__icon {\r\n    height: 2.25rem;\r\n    width: 2.25rem;\r\n\r\n    margin-right: 0.85rem;\r\n\r\n    &--heart {\r\n      fill: #ffc9c9;\r\n    }\r\n\r\n    &--chat {\r\n      fill: #a5d8ff;\r\n    }\r\n\r\n    &--more {\r\n      fill: #b2f2bb;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ArticleCard = ({ article, onArticleOpen }) => {\r\n  const { id, title, summary_content, save_date } = article;\r\n\r\n  const postDate = moment(save_date).format('DD MMMM YYYY');\r\n\r\n  return (\r\n    <div>\r\n      <CardImage src={'/images/card-image1.jpg'} alt=\"Card 1\" />\r\n      <CartTextBox>\r\n        <p className=\"content-post\">posted on: {postDate}</p>\r\n        <h3 className=\"content-title\">{title}</h3>\r\n        <p\r\n          className=\"content-detail\"\r\n          dangerouslySetInnerHTML={{ __html: summary_content }}\r\n        />\r\n        <div className=\"content__icons\">\r\n          <div className=\"content__link\">\r\n            <svg className=\"content__icon content__icon--heart\">\r\n              <use xlinkHref=\"images/sprite.svg#icon-heart\"></use>\r\n            </svg>\r\n            <span>31</span>\r\n          </div>\r\n          <div className=\"content__link\">\r\n            <svg className=\"content__icon content__icon--chat\">\r\n              <use xlinkHref=\"images/sprite.svg#icon-chat\"></use>\r\n            </svg>\r\n            <span>21</span>\r\n          </div>\r\n          <div className=\"content__link\" onClick={() => onArticleOpen(id)}>\r\n            <svg className=\"content__icon content__icon--more\">\r\n              <use xlinkHref=\"images/sprite.svg#icon-list\"></use>\r\n            </svg>\r\n            <span>Read more</span>\r\n          </div>\r\n        </div>\r\n      </CartTextBox>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArticleCard;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { color, responsive } from '../../lib/styles/utils';\r\n\r\nconst ArticleModalBlock = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 9999;\r\n  /* opacity: 0;\r\n  visibility: hidden; */\r\n  transition: all 0.5s;\r\n`;\r\n\r\nconst ArticleModalContent = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  width: 75vw;\r\n  max-height: 80vh;\r\n  background-color: #f5f4f0;\r\n  box-shadow: 0 2rem 4rem rgba(0, 0, 0, 0.2);\r\n  border-radius: 3px;\r\n\r\n  overflow: scroll;\r\n  /* opacity: 0; */\r\n  transform: translate(-50%, -50%);\r\n  transition: all 0.4s 0.2s;\r\n\r\n  padding: 2rem 5rem 5rem;\r\n\r\n  display: grid;\r\n  grid-template-columns: 45vw minmax(min-content, 25vw);\r\n  grid-column-gap: 5rem;\r\n\r\n  @media only screen and (max-width: ${responsive['bp-largest']}) {\r\n    width: 100vw;\r\n    max-height: 100vh;\r\n\r\n    grid-column-gap: 5rem;\r\n    grid-template-columns: 60vw minmax(min-content, 35vw);\r\n  }\r\n`;\r\n\r\nconst ArticleModalHeader = styled.div`\r\n  grid-column: 1 / -1;\r\n\r\n  display: flex;\r\n  justify-content: flex-end;\r\n\r\n  .popup__close {\r\n    font-size: 3rem;\r\n    font-weight: 600;\r\n    text-decoration: none;\r\n\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ArticleModalLeft = styled.div`\r\n  color: ${color.grayDark[0]};\r\n\r\n  .popup-title {\r\n    font-size: 2.75rem;\r\n    margin-bottom: 1.25rem;\r\n  }\r\n\r\n  .popup-subtitle {\r\n    font-size: 1.6rem;\r\n    color: ${color.grayLight[3]};\r\n    padding-bottom: 0.75rem;\r\n    margin-bottom: 2rem;\r\n    border-bottom: 1px solid ${color.grayLight[3]};\r\n  }\r\n\r\n  .popup__img {\r\n    width: 100%;\r\n  }\r\n  .popup__text {\r\n    margin: 2rem 0;\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  @media only screen and (max-width: ${responsive['bp-large']}) {\r\n    grid-column: 1 / -1;\r\n  }\r\n`;\r\n\r\nconst ArticleModalRight = styled.div`\r\n  .likely-news {\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    margin-bottom: 3rem;\r\n\r\n    &__text {\r\n      h3 {\r\n        font-size: 1.25rem;\r\n        margin-bottom: 1.25rem;\r\n        color: ${color.grayDark[0]};\r\n      }\r\n    }\r\n\r\n    &__cards {\r\n      display: grid;\r\n      // grid-template-rows: repeat(auto-fit, minmax(min-content, 15rem));\r\n      grid-template-rows: 15rem;\r\n      grid-auto-rows: 15rem;\r\n      grid-row-gap: 5rem;\r\n    }\r\n\r\n    &__card {\r\n      display: grid;\r\n      grid-template-rows: 5rem 10rem;\r\n      grid-template-columns: 150px 1fr;\r\n      justify-content: center;\r\n      grid-column-gap: 1rem;\r\n    }\r\n\r\n    &__img {\r\n      max-height: 150px;\r\n      max-width: 150px;\r\n      object-fit: cover;\r\n      grid-row: 1 / -1;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: ${responsive['bp-large']}) {\r\n    grid-column: 1 / -1;\r\n  }\r\n`;\r\n\r\nconst ArticleModal = ({ modal, onCancle }) => {\r\n  const { visible, article } = modal;\r\n\r\n  if (!visible || !article) return null;\r\n\r\n  return (\r\n    <ArticleModalBlock>\r\n      <ArticleModalContent>\r\n        <ArticleModalHeader>\r\n          <div className=\"popup__close\" onClick={onCancle}>\r\n            &times;\r\n          </div>\r\n        </ArticleModalHeader>\r\n        <ArticleModalLeft>\r\n          <h1 className=\"popup-title\">{article.title}</h1>\r\n          <h3 className=\"popup-subtitle\">기사입력 2020.08.02. 오후 6:04</h3>\r\n\r\n          <div className=\"popup-articleBody\">\r\n            {/* <img\r\n              src=\"/images/popup_image1.jpg\"\r\n              alt=\"Article 1\"\r\n              className=\"popup__img\"\r\n            /> */}\r\n            <p\r\n              className=\"popup__text\"\r\n              dangerouslySetInnerHTML={{ __html: article.content }}\r\n            ></p>\r\n          </div>\r\n        </ArticleModalLeft>\r\n        <ArticleModalRight>\r\n          <h3 className=\"likely-news\">연관뉴스 및 언론보도</h3>\r\n          <div className=\"likely-news__cards\">\r\n            <div class=\"likely-news__card\">\r\n              <img\r\n                src=\"/images/likely-image1.jpg\"\r\n                alt=\"Likely 1\"\r\n                className=\"likely-news__img\"\r\n              />\r\n              <div className=\"likely-news__text\">\r\n                <h3>중부지방 5일까지 물폭탄·500mm</h3>\r\n                <p>\r\n                  제4호 태풍 '하구핏'이 우리나라에 영향을 주면서 오는 5일까지\r\n                  중부지방에 많은 비가 내릴 전망이다.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"likely-news__card\">\r\n              <img\r\n                src=\"/images/likely-image2.jpg\"\r\n                alt=\"Likely 1\"\r\n                className=\"likely-news__img\"\r\n              />\r\n              <div className=\"likely-news__text\">\r\n                <h3>중부지방 5일까지 물폭탄·500mm</h3>\r\n                <p>\r\n                  제4호 태풍 '하구핏'이 우리나라에 영향을 주면서 오는 5일까지\r\n                  중부지방에 많은 비가 내릴 전망이다.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"likely-news__card\">\r\n              <img\r\n                src=\"/images/likely-image3.jpg\"\r\n                alt=\"Likely 1\"\r\n                className=\"likely-news__img\"\r\n              />\r\n              <div className=\"likely-news__text\">\r\n                <h3>중부지방 5일까지 물폭탄·500mm</h3>\r\n                <p>\r\n                  제4호 태풍 '하구핏'이 우리나라에 영향을 주면서 오는 5일까지\r\n                  중부지방에 많은 비가 내릴 전망이다.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"likely-news__card\">\r\n              <img\r\n                src=\"/images/likely-image4.jpg\"\r\n                alt=\"Likely 1\"\r\n                className=\"likely-news__img\"\r\n              />\r\n              <div className=\"likely-news__text\">\r\n                <h3>중부지방 5일까지 물폭탄·500mm</h3>\r\n                <p>\r\n                  제4호 태풍 '하구핏'이 우리나라에 영향을 주면서 오는 5일까지\r\n                  중부지방에 많은 비가 내릴 전망이다.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ArticleModalRight>\r\n      </ArticleModalContent>\r\n    </ArticleModalBlock>\r\n  );\r\n};\r\n\r\nexport default ArticleModal;\r\n","import React from 'react';\r\nimport './Loading.css';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div class=\"lds-container\">\r\n      <div class=\"lds-spinner\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useState, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport Select from 'react-select';\r\nimport DatePicker, { registerLocale } from 'react-datepicker';\r\nimport { color, responsive } from '../../lib/styles/utils';\r\nimport ArticleCard from './ArticleCard';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ArticleModal from '../popup/ArticleModal';\r\nimport { ko } from 'date-fns/locale';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport './react-datepicker-custom.scss';\r\nimport Loading from '../common/Loading';\r\n\r\nconst ArticlesBlock = styled.div`\r\n  background-color: ${color.grayLight[2]};\r\n  grid-column: full-start / full-end;\r\n  padding: 5rem 10rem;\r\n\r\n  @media only screen and (max-width: ${responsive['bp-medium']}) {\r\n    padding: 5rem;\r\n  }\r\n`;\r\n\r\nconst ArticlesHeading = styled.div`\r\n  text-align: center;\r\n  font-size: 2.25rem;\r\n  text-transform: uppercase;\r\n  word-spacing: 5px;\r\n  letter-spacing: 5px;\r\n  margin-bottom: 4.25rem;\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst CardsBlock = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(28rem, 1fr));\r\n  grid-auto-flow: dense;\r\n  grid-gap: 10rem;\r\n  align-items: start;\r\n\r\n  @media only screen and (max-width: ${responsive['bp-large']}) {\r\n    grid-template-columns: repeat(auto-fill, minmax(23rem, 1fr));\r\n    grid-gap: 6rem;\r\n  }\r\n`;\r\n\r\nconst SelectBlock = styled(Select)`\r\n  width: 18rem;\r\n  font-size: 1.6rem;\r\n`;\r\n\r\nconst DateBlock = styled.div`\r\n  width: 18rem;\r\n`;\r\n\r\nregisterLocale('ko', ko);\r\n\r\nconst Articles = ({ articles, loading, error, children, history }) => {\r\n  // 카데고리 상태\r\n  const [category, setCategory] = useState({\r\n    selectedOption: null,\r\n  });\r\n  // 날짜 상태\r\n  const [date, setDate] = useState(new Date());\r\n  // 모달 상태\r\n  const [modal, setModal] = useState({\r\n    visible: false,\r\n    article: null,\r\n  });\r\n  let selectedArticle = null;\r\n\r\n  const options = [\r\n    { value: 'all', label: 'all' },\r\n    { value: '정치', label: '정치' },\r\n    { value: '경제', label: '경제' },\r\n    { value: '사회', label: '사회' },\r\n    { value: '생활', label: '생활' },\r\n    { value: '세계', label: '세계' },\r\n    { value: 'IT', label: 'IT' },\r\n    { value: '스포츠', label: '스포츠' },\r\n    { value: '연예', label: '연예' },\r\n  ];\r\n\r\n  // 카테고리 변경시\r\n  const onCategoryChange = useCallback(\r\n    (selectedOption) => {\r\n      setCategory({ selectedOption });\r\n\r\n      history.push({\r\n        pathname: '',\r\n        search: `?category=${selectedOption.value}`,\r\n      });\r\n    },\r\n    [history],\r\n  );\r\n\r\n  // 날짜 변경시\r\n  const onDateChange = useCallback((selectedDate) => {\r\n    console.log(selectedDate);\r\n    setDate(selectedDate);\r\n  }, []);\r\n\r\n  // 팝업창 On/Off 시\r\n  const onCancle = () => {\r\n    setModal({ ...modal, visible: false });\r\n  };\r\n  const onArticleOpen = (articleId) => {\r\n    selectedArticle = articles.filter((article) => article.id === articleId);\r\n    setModal({ ...modal, visible: true, article: selectedArticle[0] });\r\n  };\r\n\r\n  // 에러 발생시\r\n  if (error) {\r\n    return <div>에러가 발생했습니다</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ArticlesBlock>\r\n        <ArticlesHeading>\r\n          <DateBlock>\r\n            <DatePicker\r\n              selected={date}\r\n              onChange={onDateChange}\r\n              locale=\"ko\"\r\n              dateFormat=\"yyyy.MM.dd(eee)\"\r\n              maxDate={new Date()}\r\n              placeholderText=\"Weeks start on Monday\"\r\n            />\r\n          </DateBlock>\r\n\r\n          <h3>Newest articles</h3>\r\n          <SelectBlock\r\n            value={category.selectedOption}\r\n            onChange={onCategoryChange}\r\n            options={options}\r\n            placeholder=\"CATEGORY...\"\r\n          />\r\n        </ArticlesHeading>\r\n        <CardsBlock>\r\n          {!loading &&\r\n            articles &&\r\n            articles.map((article) => (\r\n              <ArticleCard\r\n                key={article.id}\r\n                article={article}\r\n                onArticleOpen={onArticleOpen}\r\n              />\r\n            ))}\r\n        </CardsBlock>\r\n        {children}\r\n      </ArticlesBlock>\r\n      <ArticleModal\r\n        modal={modal}\r\n        onCancle={onCancle}\r\n        selectedArticle={selectedArticle}\r\n      />\r\n      {loading && <Loading />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Articles);\r\n","import client from './client';\r\nimport qs from 'qs';\r\n\r\n// 기사 목록 불러오기\r\nexport const list = async ({ userid, category, page }) => {\r\n  const queryString = qs.stringify({\r\n    userid,\r\n    category,\r\n    page,\r\n  });\r\n  return client.get(`/api/article?${queryString}`);\r\n};\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport createRequestSaga from '../lib/createRequestSaga';\r\nimport * as articleAPI from '../lib/api/articles';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\nconst LIST_ARTICLE = 'article/LIST_ARTICLE';\r\nconst LIST_ARTICLE_SUCCESS = 'article/LIST_ARTICLE_SUCCESS';\r\nconst LIST_ARTICLE_FAILURE = 'article/LIST_ARTICLE_FAILURE';\r\n\r\nexport const listArticle = createAction(LIST_ARTICLE, ({ category, page }) => ({\r\n  category,\r\n  page,\r\n}));\r\n\r\nconst listArticleSaga = createRequestSaga(LIST_ARTICLE, articleAPI.list);\r\nexport function* articleSaga() {\r\n  yield takeLatest(LIST_ARTICLE, listArticleSaga);\r\n}\r\n\r\nconst initialState = {\r\n  articles: null,\r\n  error: null,\r\n  lastPage: 1,\r\n};\r\n\r\nconst articles = handleActions(\r\n  {\r\n    [LIST_ARTICLE_SUCCESS]: (state, { payload: articles, meta: response }) => ({\r\n      ...state,\r\n      articles,\r\n      lastPage: parseInt(response.headers['last-page'], 10),\r\n    }),\r\n    [LIST_ARTICLE_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default articles;\r\n","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport qs from 'qs';\r\nimport Button from '../common/Button';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { listArticle } from '../../modules/articles';\r\n\r\nconst PaginationBlock = styled.div`\r\n  width: 320px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 3rem;\r\n`;\r\nconst PageNumber = styled.div`\r\n  font-size: 2.25rem;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst buildLink = ({ category, page }) => {\r\n  const query = qs.stringify({ category, page });\r\n  return `/?${query}`;\r\n};\r\n\r\nconst Pagination = ({ lastPage, location, dispatch }) => {\r\n  let { category = 'all', page = 1 } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n\r\n  page = parseInt(page, 10);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      listArticle({\r\n        category,\r\n        page,\r\n      }),\r\n    );\r\n  }, [dispatch, category, page]);\r\n\r\n  return (\r\n    <PaginationBlock>\r\n      <Button\r\n        disabled={page === 1}\r\n        to={page === 1 ? undefined : buildLink({ category, page: page - 1 })}\r\n      >\r\n        prev\r\n      </Button>\r\n      <PageNumber>{page}</PageNumber>\r\n      <Button\r\n        disabled={page === lastPage}\r\n        to={\r\n          page === lastPage\r\n            ? undefined\r\n            : buildLink({ category, page: page + 1 })\r\n        }\r\n      >\r\n        next\r\n      </Button>\r\n    </PaginationBlock>\r\n  );\r\n};\r\n\r\nexport default withRouter(Pagination);\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Articles from '../../components/articles/Articles';\r\nimport Pagination from '../../components/articles/Pagination';\r\n\r\nconst ArticlesContainer = () => {\r\n  const { articles, error, loading, lastPage } = useSelector(\r\n    ({ articles, loading }) => ({\r\n      articles: articles.articles,\r\n      error: articles.error,\r\n      loading: loading['article/LIST_ARTICLE'],\r\n      lastPage: articles.lastPage,\r\n    }),\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Articles articles={articles} loading={loading} error={error}>\r\n      <Pagination lastPage={lastPage} dispatch={dispatch} />\r\n    </Articles>\r\n  );\r\n};\r\n\r\nexport default ArticlesContainer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { responsive } from '../lib/styles/utils';\r\nimport ImageSlider from '../components/ImageSlide/ImageSlider';\r\nimport Footer from '../components/common/Footer';\r\nimport HeaderContainer from '../containers/common/HeaderContainer';\r\nimport ArticlesContainer from '../containers/articles/ArticlesContainer';\r\n\r\nconst MainPageBlock = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 8vh 80vh min-content min-content;\r\n  grid-template-columns:\r\n    [full-start] minmax(6rem, 1fr) [center-start] repeat(\r\n      8,\r\n      [col-start] minmax(min-content, 16rem) [col-end]\r\n    )\r\n    [center-end] minmax(6rem, 1fr) [full-end];\r\n\r\n  @media only screen and (max-width: ${responsive['bp-large']}) {\r\n    grid-template-rows: 12vh 70vh min-content min-content;\r\n  }\r\n`;\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <MainPageBlock>\r\n      <HeaderContainer />\r\n      <ImageSlider />\r\n      <ArticlesContainer />\r\n      <Footer />\r\n    </MainPageBlock>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { responsive } from '../../lib/styles/utils';\r\n\r\n/*\r\n회원가입/로그인 페이지의 레이아웃을 담당하는 컴포넌트입니다\r\n*/\r\nconst AuthTemplateBlock = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-template-rows: 100vh;\r\n`;\r\n\r\nconst Pictures = styled.div`\r\n  background-image: linear-gradient(\r\n      rgba(134, 142, 150, 0.8),\r\n      rgba(134, 142, 150, 0.8)\r\n    ),\r\n    url(/images/back.jpg);\r\n\r\n  background-size: cover;\r\n  background-position: bottom;\r\n\r\n  display: grid;\r\n  grid-template-rows: repeat(6, 1fr);\r\n  grid-template-columns: repeat(6, 1fr);\r\n  align-items: center;\r\n\r\n  @media only screen and (max-width: ${responsive['bp-medium']}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst PictureTextBox = styled.div`\r\n  width: 100%;\r\n  grid-row: 2 / 6;\r\n  grid-column: 2 / 6;\r\n\r\n  .pictures__textbox--title {\r\n    font-size: 3.5rem;\r\n    color: white;\r\n    text-align: right;\r\n    padding-bottom: 6rem;\r\n    border-bottom: solid 1px white;\r\n  }\r\n\r\n  .pictures__textbox--subtitle {\r\n    font-size: 2.25rem;\r\n    color: white;\r\n    text-align: right;\r\n    margin-top: 10rem;\r\n  }\r\n`;\r\n\r\nconst AuthTemplate = ({ children }) => {\r\n  return (\r\n    <AuthTemplateBlock>\r\n      <Pictures>\r\n        <PictureTextBox>\r\n          <h1 class=\"pictures__textbox--title\">\r\n            Summary <br />\r\n            Newpapers (SN)\r\n          </h1>\r\n          <h3 class=\"pictures__textbox--subtitle\">\r\n            Save your time <br />\r\n            by reading the summary article.\r\n          </h3>\r\n        </PictureTextBox>\r\n      </Pictures>\r\n      {children}\r\n    </AuthTemplateBlock>\r\n  );\r\n};\r\n\r\nexport default AuthTemplate;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { color, responsive } from '../../lib/styles/utils';\r\nimport Button from '../common/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/*\r\n회원가입 또는 로그인 폼을 보여줍니다\r\n*/\r\nconst AuthFormBlock = styled.div`\r\n  background-color: #f1f3f5;\r\n  display: grid;\r\n  grid-template-rows: repeat(6, 1fr);\r\n  grid-template-columns: repeat(6, 1fr);\r\n  align-items: center;\r\n\r\n  @media only screen and (max-width: ${responsive['bp-medium']}) {\r\n    grid-column: 1 / 3;\r\n  }\r\n\r\n  .form__header {\r\n    width: 100%;\r\n    grid-row: 2 / 3;\r\n    grid-column: 2 / 6;\r\n    font-size: 2.25rem;\r\n    align-self: flex-start;\r\n  }\r\n`;\r\n\r\nconst FormBlock = styled.form`\r\n  grid-row: 3 / 5;\r\n  grid-column: 2 / 6;\r\n\r\n  display: grid;\r\n  grid-template-rows: repeat(2, min-content);\r\n  grid-row-gap: 4.5rem;\r\n`;\r\n\r\nconst FormGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 60%;\r\n\r\n  @media only screen and (max-width: ${responsive['bp-large']}) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst LableBlock = styled.label`\r\n  font-size: 1.6rem;\r\n  text-transform: uppercase;\r\n  font-weight: 700;\r\n  color: #adb5bd;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst InputBlock = styled.input`\r\n  font-size: 1.5rem;\r\n  font-family: inherit;\r\n  padding: 1.5rem 2rem;\r\n  border-radius: 2px;\r\n  background-color: rgba(white, 0.5);\r\n  border: none;\r\n  border: 3px solid ${color.grayDark[3]};\r\n\r\n  display: block;\r\n  transition: all 0.5s;\r\n`;\r\n\r\nconst Footer = styled.h3`\r\n  width: 100%;\r\n  grid-row: 5 / 6;\r\n  grid-column: 2 / 6;\r\n  font-size: 1.6rem;\r\n  align-self: flex-end;\r\n\r\n  .form__bottom--highlight {\r\n    color: #228be6;\r\n  }\r\n`;\r\n\r\n/* 인증 실패시 에러를 보여줍니다 */\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n  text-align: center;\r\n  font-size: 1.3rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst textMap = {\r\n  login: '로그인',\r\n  register: '회원가입',\r\n};\r\n\r\nconst AuthForm = ({ type, form, onChange, onSubmit, error }) => {\r\n  const text = textMap[type];\r\n\r\n  return (\r\n    <AuthFormBlock>\r\n      {type === 'login' ? (\r\n        <h3 className=\"form__header\">\r\n          Please enter your ID and <br /> password to login.\r\n        </h3>\r\n      ) : (\r\n        <h3 className=\"form__header\">\r\n          Please enter your ID and <br /> password to register.\r\n        </h3>\r\n      )}\r\n\r\n      <FormBlock onSubmit={onSubmit}>\r\n        <FormGroup>\r\n          <LableBlock htmlFor=\"userid\" className=\"form__label\">\r\n            id\r\n          </LableBlock>\r\n          <InputBlock\r\n            name=\"userid\"\r\n            placeholder=\"아이디\"\r\n            onChange={onChange}\r\n            value={form.userid}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <LableBlock htmlFor=\"password\" className=\"form__label\">\r\n            password\r\n          </LableBlock>\r\n          <InputBlock\r\n            name=\"password\"\r\n            placeholder=\"비밀번호\"\r\n            type=\"password\"\r\n            onChange={onChange}\r\n            value={form.password}\r\n          />\r\n        </FormGroup>\r\n\r\n        {type === 'register' && (\r\n          <FormGroup>\r\n            <LableBlock htmlFor=\"passwordConfirm\" className=\"form__label\">\r\n              password confirm\r\n            </LableBlock>\r\n            <InputBlock\r\n              name=\"passwordConfirm\"\r\n              placeholder=\"비밀번호 확인\"\r\n              type=\"password\"\r\n              onChange={onChange}\r\n              value={form.passwordConfirm}\r\n            />\r\n          </FormGroup>\r\n        )}\r\n        {error && <ErrorMessage>{error}</ErrorMessage>}\r\n        <FormGroup>\r\n          <Button>{text}</Button>\r\n        </FormGroup>\r\n      </FormBlock>\r\n\r\n      {type === 'login' ? (\r\n        <Footer>\r\n          Don't have an account? &nbsp;\r\n          <Link className=\"form__bottom--highlight\" to=\"/register\">\r\n            Sign Up\r\n          </Link>{' '}\r\n        </Footer>\r\n      ) : (\r\n        <Footer>\r\n          Do you already have an account? &nbsp;\r\n          <Link className=\"form__bottom--highlight\" to=\"/login\">\r\n            Sign Up\r\n          </Link>\r\n        </Footer>\r\n      )}\r\n\r\n      {/* <Footer>\r\n        {type === 'login' ? (\r\n          <Link to=\"/register\">회원가입</Link>\r\n        ) : (\r\n          <Link to=\"/login\">로그인</Link>\r\n        )}\r\n      </Footer> */}\r\n    </AuthFormBlock>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport createRequestSaga from '../lib/createRequestSaga';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport produce from 'immer';\r\nimport * as authAPI from '../lib/api/auth';\r\n\r\n// 액션 객체\r\nconst LOGIN = 'auth/LOGIN';\r\nconst LOGIN_SUCCESS = 'auth/LOGIN_SUCCESS';\r\nconst LOGIN_FAILURE = 'auth/LOGIN_FAILURE';\r\n\r\nconst REGISTER = 'auth/REGISTER';\r\nconst REGISTER_SUCCESS = 'auth/REGISTER_SUCCESS';\r\nconst REGISTER_FAILURE = 'auth/REGISTER_FAILURE';\r\n\r\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\r\n\r\n// 액션 생성함수\r\nexport const login = createAction(LOGIN, ({ userid, password }) => ({\r\n  userid,\r\n  password,\r\n}));\r\nexport const register = createAction(REGISTER, ({ userid, password }) => ({\r\n  userid,\r\n  password,\r\n}));\r\nexport const changeField = createAction(\r\n  CHANGE_FIELD,\r\n  ({ form, key, value }) => ({\r\n    form, // register, login 중 하나\r\n    key, // userid, password, passwordConfirm 중 하나\r\n    value, // 실제 값\r\n  }),\r\n);\r\nexport const initializeForm = createAction(INITIALIZE_FORM, (form) => form); // register / login\r\n\r\n// 사가 생성\r\nexport const loginSaga = createRequestSaga(LOGIN, authAPI.login);\r\nexport const registerSaga = createRequestSaga(REGISTER, authAPI.register);\r\nexport function* authSaga() {\r\n  yield takeLatest(LOGIN, loginSaga);\r\n  yield takeLatest(REGISTER, registerSaga);\r\n}\r\n\r\n// 초기상태\r\nconst initialState = {\r\n  register: {\r\n    userid: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n  },\r\n  login: {\r\n    userid: '',\r\n    password: '',\r\n  },\r\n  auth: null,\r\n  authError: null,\r\n};\r\n\r\n// 리듀서\r\nconst auth = handleActions(\r\n  {\r\n    [LOGIN_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      authError: error,\r\n    }),\r\n    [REGISTER_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [REGISTER_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      authError: error,\r\n    }),\r\n    [CHANGE_FIELD]: (state, { payload: { form, key, value } }) =>\r\n      produce(state, (draft) => {\r\n        draft[form][key] = value; // // 예: state.register.username을 바꾼다\r\n      }),\r\n    [INITIALIZE_FORM]: (state, { payload: form }) => ({\r\n      ...state,\r\n      [form]: initialState[form],\r\n      authError: null,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default auth;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport { changeField, initializeForm, login } from '../../modules/auth';\r\nimport { check } from '../../modules/user';\r\n\r\nconst LoginForm = ({ history }) => {\r\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    form: auth.login,\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n  const dispatch = useDispatch();\r\n\r\n  const [error, setError] = useState(null);\r\n\r\n  // 인풋 변경 이벤트 핸들러\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    dispatch(\r\n      changeField({\r\n        form: 'login',\r\n        key: name,\r\n        value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  // 폼 등록 이벤트 핸들러\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { userid, password } = form;\r\n    dispatch(login({ userid, password }));\r\n  };\r\n\r\n  // 컴포넌트가 처음 렌더링될때 form을 초기화해줌\r\n  useEffect(() => {\r\n    dispatch(initializeForm('login'));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (authError) {\r\n      console.log('오류 발생');\r\n      console.log(authError);\r\n      setError('로그인 실패');\r\n    }\r\n\r\n    if (auth) {\r\n      console.log('로그인 성공');\r\n      console.log(auth);\r\n      dispatch(check());\r\n    }\r\n  }, [auth, authError, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.push('/'); // 홈으로 이동\r\n\r\n      try {\r\n        // 로그인 상태 유지를 위해 브라우저에 내장되어있는 localStorage 사용\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n      } catch (e) {\r\n        console.log('localStorage is not working');\r\n      }\r\n    }\r\n  }, [history, user]);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"login\"\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n","import React from 'react';\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport LoginForm from '../containers/auth/LoginForm';\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <AuthTemplate>\r\n      <LoginForm />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeField, initializeForm, register } from '../../modules/auth';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { check } from '../../modules/user';\r\n\r\nconst RegisterForm = ({ history }) => {\r\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    form: auth.register,\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n  const dispatch = useDispatch();\r\n\r\n  const [error, setError] = useState(null);\r\n\r\n  // 인풋 변경 이벤트 핸들러\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    dispatch(\r\n      changeField({\r\n        form: 'register',\r\n        key: name,\r\n        value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  // 폼 등록 이벤트 핸들러\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { userid, password, passwordConfirm } = form;\r\n\r\n    // 하나라도 비어있다면\r\n    if ([userid, password, passwordConfirm].includes('')) {\r\n      setError('빈칸을 모두 입력하세요');\r\n      return;\r\n    }\r\n\r\n    // 비밀번호가 일치하지 않는다면\r\n    if (password !== passwordConfirm) {\r\n      setError('비밀번호가 일치하지 않습니다');\r\n      dispatch(changeField({ form: 'register', key: 'password', value: '' }));\r\n      dispatch(\r\n        changeField({ form: 'register', key: 'passwordConfirm', value: '' }),\r\n      );\r\n      return;\r\n    }\r\n    // 일치하면 register 액션 발생시킴\r\n    dispatch(register({ userid, password }));\r\n  };\r\n\r\n  // 컴포넌트가 처음 렌더링될 때 form을 초기화함\r\n  useEffect(() => {\r\n    dispatch(initializeForm('register'));\r\n  }, [dispatch]);\r\n\r\n  // 회원가입 성공 / 실패 처리\r\n  useEffect(() => {\r\n    if (authError) {\r\n      // 계정명이 이미존재\r\n      if (authError.response.status === 409) {\r\n        setError('이미 존재하는 계정입니다');\r\n        return;\r\n      }\r\n\r\n      // 기타 이유\r\n      setError('회원가입 실패');\r\n      return;\r\n    }\r\n    if (auth) {\r\n      console.log('회원가입 성공');\r\n      console.log(auth);\r\n      dispatch(check());\r\n    }\r\n  }, [auth, authError, dispatch]);\r\n\r\n  // user값이 잘 설정되었는지 확인\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.push('/'); // 홈화면으로 이동\r\n\r\n      try {\r\n        // 로그인 상태유지를 위해 브라우저에 내장되어있는 localStorage 사용\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n      } catch (e) {\r\n        console.log('localStorage is not working');\r\n      }\r\n    }\r\n  }, [history, user]);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"register\"\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(RegisterForm);\r\n","import React from 'react';\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport RegisterForm from '../containers/auth/RegisterForm';\r\n\r\nconst RegisterPage = () => {\r\n  return (\r\n    <AuthTemplate>\r\n      <RegisterForm />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\nimport './App.css';\nimport { Route } from 'react-router-dom';\nimport MainPage from './pages/MainPage';\nimport LoginPage from './pages/LoginPage';\nimport RegisterPage from './pages/RegisterPage';\n\nfunction App() {\n  return (\n    <>\n      <Route component={MainPage} path=\"/\" exact />\n      <Route component={LoginPage} path=\"/login\" />\n      <Route component={RegisterPage} path=\"/register\" />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport loading from './loading';\r\nimport { all } from 'redux-saga/effects';\r\nimport auth, { authSaga } from './auth';\r\nimport user, { userSaga } from './user';\r\nimport articles, { articleSaga } from './articles';\r\n\r\nconst rootReducer = combineReducers({\r\n  loading,\r\n  auth,\r\n  user,\r\n  articles,\r\n});\r\n\r\nexport function* rootSaga() {\r\n  yield all([authSaga(), userSaga(), articleSaga()]);\r\n}\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer, { rootSaga } from './modules/index';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { tempSetUser, check } from './modules/user';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\n);\n\n// 새로고침시 localStorage에 저장된 user가 있는지 확인\nfunction loadUser() {\n  try {\n    const user = localStorage.getItem('user');\n    if (!user) return; // 로그인 상태가 아니라면 아무것도 안함\n\n    store.dispatch(tempSetUser(user));\n    store.dispatch(check());\n  } catch (e) {\n    console.log('localStorage is not working');\n  }\n}\n\nsagaMiddleware.run(rootSaga);\nloadUser();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}